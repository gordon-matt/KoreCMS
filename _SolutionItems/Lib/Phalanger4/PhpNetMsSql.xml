<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PhpNetMsSql</name>
    </assembly>
    <members>
        <member name="T:PHP.Library.Data.MsSqlLocalConfig">
            <summary>
            Script independent MSSQL configuration.
            </summary>
        </member>
        <member name="F:PHP.Library.Data.MsSqlLocalConfig.Timeout">
            <summary>
            Request timeout in seconds. Non-positive value means no timeout.
            </summary>
        </member>
        <member name="F:PHP.Library.Data.MsSqlLocalConfig.ConnectTimeout">
            <summary>
            Connect timeout in seconds. Non-positive value means no timeout.
            </summary>
        </member>
        <member name="F:PHP.Library.Data.MsSqlLocalConfig.BatchSize">
            <summary>
            Limit on size of a batch. Non-positive value means no limit.
            </summary>
        </member>
        <member name="M:PHP.Library.Data.MsSqlLocalConfig.DeepCopy">
            <summary>
            Creates a deep copy of the configuration record.
            </summary>
            <returns>The copy.</returns>
        </member>
        <member name="M:PHP.Library.Data.MsSqlLocalConfig.Parse(System.String,System.String,System.Xml.XmlNode)">
            <summary>
            Loads configuration from XML.
            </summary>
        </member>
        <member name="T:PHP.Library.Data.MsSqlGlobalConfig">
            <summary>
            Script dependent MSSQL configuration.
            </summary>
        </member>
        <member name="F:PHP.Library.Data.MsSqlGlobalConfig.MaxConnections">
            <summary>
            Maximum number of connections per request. Negative value means no limit.
            </summary>
        </member>
        <member name="F:PHP.Library.Data.MsSqlGlobalConfig.NTAuthentication">
            <summary>
            Use NT authentication when connecting to the server.
            </summary>
        </member>
        <member name="M:PHP.Library.Data.MsSqlGlobalConfig.Parse(System.String,System.String,System.Xml.XmlNode)">
            <summary>
            Loads configuration from XML.
            </summary>
            <param name="name"></param>
            <param name="value"></param>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:PHP.Library.Data.MsSqlGlobalConfig.DeepCopy">
            <summary>
            Creates a deep copy of the configuration record.
            </summary>
            <returns>The copy.</returns>
        </member>
        <member name="T:PHP.Library.Data.MsSqlConfiguration">
            <summary>
            MSSQL extension configuration.
            </summary>
        </member>
        <member name="M:PHP.Library.Data.MsSqlConfiguration.GetSetRestore(PHP.Core.LocalConfiguration,System.String,System.Object,PHP.Library.IniAction)">
            <summary>
            Gets, sets, or restores a value of a legacy configuration option.
            </summary>
        </member>
        <member name="M:PHP.Library.Data.MsSqlConfiguration.LegacyOptionsToXml(System.Xml.XmlTextWriter,System.Collections.Hashtable,System.Boolean)">
            <summary>
            Writes MySql legacy options and their values to XML text stream.
            Skips options whose values are the same as default values of Phalanger.
            </summary>
            <param name="writer">XML writer.</param>
            <param name="options">A hashtable containing PHP names and option values. Consumed options are removed from the table.</param>
            <param name="writePhpNames">Whether to add "phpName" attribute to option nodes.</param>
        </member>
        <member name="M:PHP.Library.Data.MsSqlConfiguration.RegisterLegacyOptions">
            <summary>
            Registers legacy ini-options.
            </summary>
        </member>
        <member name="M:PHP.Library.Data.MsSqlConfiguration.GetLocal(PHP.Core.ScriptContext)">
            <summary>
            Gets local configuration associated with a specified script context.
            </summary>
            <param name="context">Scritp context.</param>
            <returns>Local library configuration.</returns>
        </member>
        <member name="P:PHP.Library.Data.MsSqlConfiguration.Local">
            <summary>
            Gets the library configuration associated with the current script context.
            </summary>
        </member>
        <member name="P:PHP.Library.Data.MsSqlConfiguration.DefaultLocal">
            <summary>
            Gets the default library configuration.
            </summary>
        </member>
        <member name="P:PHP.Library.Data.MsSqlConfiguration.Global">
            <summary>
            Gets the global library configuration.
            </summary>
        </member>
        <member name="T:PHP.Library.Data.MsSqlLibraryDescriptor">
            <summary>
            Describes the class library assembly content and configuration.
            </summary>
        </member>
        <member name="M:PHP.Library.Data.MsSqlLibraryDescriptor.Loaded(PHP.Core.PhpLibraryAttribute,PHP.Core.LibraryConfigStore)">
            <summary>
            Called by the Core after the library is loaded.
            </summary>
        </member>
        <member name="M:PHP.Library.Data.MsSqlLibraryDescriptor.ParseConfig(PHP.Core.ConfigContextBase,PHP.Core.PhpConfigurationContext,System.Xml.XmlNode)">
            <summary>
            Parses a configuration section belonging to the MSSQL library. 
            </summary>
            <param name="result">A configuration context.</param>
            <param name="context">The context of the configuration created by Phalanger Core.</param>
            <param name="section">A XML node containing the configuration or its part.</param>
            <returns>Updated configuration context.</returns>
        </member>
        <member name="M:PHP.Library.Data.MsSqlLibraryDescriptor.CreateConfigContext">
            <summary>
            Creates empty library configuration context.
            </summary>
            <returns>An initialized configuration context. Should not be a <B>null</B> reference.</returns>
        </member>
        <member name="P:PHP.Library.Data.MsSqlLibraryDescriptor.Singleton">
            <summary>
            Stores one and only instance of the class that is created when the assembly is loaded.
            </summary>
        </member>
        <member name="T:PHP.Library.Data.MsSql">
            <summary>
            Implements PHP functions provided by MSSQL extension.
            </summary>
        </member>
        <member name="M:PHP.Library.Data.MsSql.Clear">
            <summary>
            Clears thread static fields at the end of each request.
            </summary>
        </member>
        <member name="M:PHP.Library.Data.MsSql.Close">
            <summary>
            Close last connection.
            </summary>
            <returns><B>true</B> on success, <B>false</B> on failure.</returns>
        </member>
        <member name="M:PHP.Library.Data.MsSql.Close(PHP.Core.PhpResource)">
            <summary>
            Closes a specified connection.
            </summary>
            <param name="linkIdentifier">The connection resource.</param>
            <returns><B>true</B> on success, <B>false</B> on failure.</returns>
        </member>
        <member name="M:PHP.Library.Data.MsSql.Connect">
            <summary>
            Establishes a new connection to SQL server using default server, credentials, and flags.
            </summary>
            <returns>
            Resource representing the connection or a <B>null</B> reference (<B>false</B> in PHP) on failure.
            </returns>
            <remarks>
            Default values are taken from the configuration.
            </remarks>
        </member>
        <member name="M:PHP.Library.Data.MsSql.Connect(System.String)">
            <summary>
            Establishes a new connection to SQL server using a specified server and default credentials and flags.
            </summary>
            <param name="server">Server (host). A <b>null</b> reference means the default value.</param>
            <returns>
            Resource representing the connection or a <B>null</B> reference (<B>false</B> in PHP) on failure.
            </returns>
            <remarks>
            Default values are taken from the configuration.
            </remarks>		
        </member>
        <member name="M:PHP.Library.Data.MsSql.Connect(System.String,System.String)">
            <summary>
            Establishes a new connection to SQL server using a specified server and user and default password and flags.
            </summary>
            <param name="server">Server (host). A <b>null</b> reference means the default value.</param>
            <param name="user">User name. A <b>null</b> reference means the default value.</param>
            <returns>
            Resource representing the connection or a <B>null</B> reference (<B>false</B> in PHP) on failure.
            </returns>
            <remarks>
            Default values are taken from the configuration.
            </remarks>		
        </member>
        <member name="M:PHP.Library.Data.MsSql.Connect(System.String,System.String,System.String)">
            <summary>
            Establishes a new connection to SQL server using a specified server, user, and password and default flags.
            </summary>
            <param name="server">Server (host). A <b>null</b> reference means the default value.</param>
            <param name="user">User name. A <b>null</b> reference means the default value.</param>
            <param name="password">Password. A <b>null</b> reference means the default value.</param>
            <returns>
            Resource representing the connection or a <B>null</B> reference (<B>false</B> in PHP) on failure.
            </returns>
            <remarks>
            Default values are taken from the configuration.
            </remarks>		
        </member>
        <member name="M:PHP.Library.Data.MsSql.Connect(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Establishes a connection to SQL server using a specified server, user, and password and default flags.
            </summary>
            <param name="server">Server (host). A <b>null</b> reference means the default value.</param>
            <param name="user">User name. A <b>null</b> reference means the default value.</param>
            <param name="password">Password. A <b>null</b> reference means the default value.</param>
            <param name="newLink">Whether to create a new link (ignored by Phalanger).</param>
            <returns>
            Resource representing the connection or a <B>null</B> reference (<B>false</B> in PHP) on failure.
            </returns>
            <remarks>
            Default values are taken from the configuration.
            </remarks>		
        </member>
        <member name="M:PHP.Library.Data.MsSql.PersistentConnect">
            <summary>
            Establishes a new connection to MySQL server using default server, credentials, and flags.
            </summary>
            <returns>
            Resource representing the connection or a <B>null</B> reference (<B>false</B> in PHP) on failure.
            </returns>
            <remarks>
            Default values are taken from the configuration.
            </remarks>		
        </member>
        <member name="M:PHP.Library.Data.MsSql.PersistentConnect(System.String)">
            <summary>
            Establishes a new connection to SQL server using default server, credentials, and flags.
            </summary>
            <returns>
            Resource representing the connection or a <B>null</B> reference (<B>false</B> in PHP) on failure.
            </returns>
            <remarks>
            Default values are taken from the configuration.
            </remarks>		
        </member>
        <member name="M:PHP.Library.Data.MsSql.PersistentConnect(System.String,System.String)">
            <summary>
            Establishes a new connection to SQL server using a specified server and user and default password and flags.
            </summary>
            <param name="server">Server (host). A <b>null</b> reference means the default value.</param>
            <param name="user">User name. A <b>null</b> reference means the default value.</param>
            <returns>
            Resource representing the connection or a <B>null</B> reference (<B>false</B> in PHP) on failure.
            </returns>
            <remarks>
            Default values are taken from the configuration.
            Creates a non-persistent connection. Persistent connections are not supported.
            </remarks>			
        </member>
        <member name="M:PHP.Library.Data.MsSql.PersistentConnect(System.String,System.String,System.String)">
            <summary>
            Establishes a new connection to SQL server using a specified server, user, and password and default flags.
            </summary>
            <param name="server">Server (host). A <b>null</b> reference means the default value.</param>
            <param name="user">User name. A <b>null</b> reference means the default value.</param>
            <param name="password">Password. A <b>null</b> reference means the default value.</param>
            <returns>
            Resource representing the connection or a <B>null</B> reference (<B>false</B> in PHP) on failure.
            </returns>
            <remarks>
            Default values are taken from the configuration.
            Creates a non-persistent connection. Persistent connections are not supported.
            </remarks>			
        </member>
        <member name="M:PHP.Library.Data.MsSql.PersistentConnect(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Establishes a connection to SQL server using a specified server, user, and password and default flags.
            </summary>
            <param name="server">Server (host). A <b>null</b> reference means the default value.</param>
            <param name="user">User name. A <b>null</b> reference means the default value.</param>
            <param name="password">Password. A <b>null</b> reference means the default value.</param>
            <param name="newLink">Whether to create a new link (ignored by Phalanger).</param>
            <returns>
            Resource representing the connection or a <B>null</B> reference (<B>false</B> in PHP) on failure.
            </returns>
            <remarks>
            Default values are taken from the configuration.
            Creates a non-persistent connection. Persistent connections are not supported.
            </remarks>		
        </member>
        <member name="M:PHP.Library.Data.MsSql.FreeResult(PHP.Core.PhpResource)">
            <summary>
            Releases a resource represening a query result.
            </summary>
            <param name="resultHandle">Query result resource.</param>
            <returns><B>true</B> on success, <B>false</B> on failure (invalid resource).</returns>
        </member>
        <member name="M:PHP.Library.Data.MsSql.SelectDb(System.String)">
            <summary>
            Selects the current DB for the last created connection.
            </summary>
            <param name="databaseName">Name of the database.</param>
            <returns><B>true</B> on success, <B>false</B> on failure.</returns>
        </member>
        <member name="M:PHP.Library.Data.MsSql.SelectDb(System.String,PHP.Core.PhpResource)">
            <summary>
            Selects the current DB for a specified connection.
            </summary>
            <param name="databaseName">Name of the database.</param>
            <param name="linkIdentifier">Connection resource.</param>
            <returns><B>true</B> on success, <B>false</B> on failure.</returns>
        </member>
        <member name="M:PHP.Library.Data.MsSql.Query(System.String)">
            <summary>
            Sends a query to the current database associated with the last created connection.
            </summary>
            <param name="query">Query.</param>
            <returns>Query resource or a <B>null</B> reference (<B>null</B> in PHP) on failure.</returns>
        </member>
        <member name="M:PHP.Library.Data.MsSql.Query(System.String,PHP.Core.PhpResource)">
            <summary>
            Sends a query to the current database associated with a specified connection.
            </summary>
            <param name="query">Query.</param>
            <param name="linkIdentifier">Connection resource.</param>
            <returns>Query resource or a <B>null</B> reference (<B>null</B> in PHP) on failure.</returns>
        </member>
        <member name="M:PHP.Library.Data.MsSql.Query(System.String,PHP.Core.PhpResource,System.Int32)">
            <summary>
            Sends a query to the current database associated with a specified connection.
            </summary>
            <param name="query">Query.</param>
            <param name="linkIdentifier">Connection resource.</param>
            <param name="batchSize">Connection resource.</param>
            <returns>Query resource or a <B>null</B> reference (<B>null</B> in PHP) on failure.</returns>
        </member>
        <member name="M:PHP.Library.Data.MsSql.FetchRow(PHP.Core.PhpResource)">
            <summary>
            Get a result row as an integer indexed array. 
            </summary>
            <param name="resultHandle">Query result resource.</param>
            <returns>Array indexed by integers starting from 0 containing values of the current row.</returns>
        </member>
        <member name="M:PHP.Library.Data.MsSql.FetchAssoc(PHP.Core.PhpResource)">
            <summary>
            Get a result row as an associative array. 
            </summary>
            <param name="resultHandle">Query result resource.</param>
            <returns>Array indexed by column names containing values of the current row.</returns>			
        </member>
        <member name="M:PHP.Library.Data.MsSql.FetchArray(PHP.Core.PhpResource)">
            <summary>
            Get a result row as an associative array combined with integer-indexed array. 
            </summary>
            <param name="resultHandle">Query result resource.</param>
            <returns>
            Array indexed by both column names and indices containing values of the current row.
            Each value is contained twice - once with column name key and once with column index.
            </returns>
        </member>
        <member name="M:PHP.Library.Data.MsSql.FetchArray(PHP.Core.PhpResource,PHP.Library.Data.MsSql.QueryResultKeys)">
            <summary>
            Get a result row as an array with a specified key format. 
            </summary>
            <param name="resultHandle">Query result resource.</param>
            <param name="resultType">Type(s) of keys in the resulting array.</param>
            <returns>
            Array containing values of the rows indexed by column keys and/or column indices depending 
            on value of <paramref name="resultType"/>.
            </returns>
        </member>
        <member name="M:PHP.Library.Data.MsSql.FetchObject(PHP.Core.PhpResource)">
            <summary>
            Get a result row as an object. 
            </summary>
            <param name="resultHandle">Query result resource.</param>
            <returns>
            Object whose fields contain values from the current row. 
            Field names corresponds to the column names.
            </returns>
        </member>
        <member name="M:PHP.Library.Data.MsSql.GetLastAffectedRows">
            <summary>
            Get a number of affected rows in the previous operation.
            </summary>
            <returns>The number of affected rows or -1 if the last operation failed or the connection is invalid.</returns>
        </member>
        <member name="M:PHP.Library.Data.MsSql.GetLastAffectedRows(PHP.Core.PhpResource)">
            <summary>
            Get a number of affected rows in the previous operation.
            </summary>
            <param name="linkIdentifier">Connection resource.</param>
            <returns>The number of affected rows or -1 if the last operation failed or the connection is invalid.</returns>
        </member>
        <member name="M:PHP.Library.Data.MsSql.GetFieldCount(PHP.Core.PhpResource)">
            <summary>
            Get number of columns (fields) in a specified result.
            </summary>
            <param name="resultHandle">Query result resource.</param>
            <returns>Number of columns in the specified result or 0 if the result resource is invalid.</returns>
        </member>
        <member name="M:PHP.Library.Data.MsSql.GetRowCount(PHP.Core.PhpResource)">
            <summary>
            Get number of rows in a specified result.
            </summary>
            <param name="resultHandle">Query result resource.</param>
            <returns>Number of rows in the specified result or 0 if the result resource is invalid.</returns>
        </member>
        <member name="M:PHP.Library.Data.MsSql.GetLastMessage">
            <summary>
            Gets last error message.
            </summary>
            <returns>The message sent by server.</returns>
        </member>
        <member name="M:PHP.Library.Data.MsSql.MinErrorSeverity(System.Int32)">
            <summary>
            Sets a threshold for displaying errors sent by server. Not supported.
            </summary>
            <param name="severity">Severity threshold.</param>
        </member>
        <member name="M:PHP.Library.Data.MsSql.MinMessageSeverity(System.Int32)">
            <summary>
            Sets a threshold for displaying messages sent by server. Not supported.
            </summary>
            <param name="severity">Severity threshold.</param>
        </member>
        <member name="M:PHP.Library.Data.MsSql.GetField(PHP.Core.PhpResource,System.Int32,System.Object)">
            <summary>
            Gets a contents of a specified cell from a specified query result resource.
            </summary>
            <param name="resultHandle">Query result resource.</param>
            <param name="rowIndex">Row index.</param>
            <param name="field">Column (field) integer index or string name.</param>
            <returns>The value of the cell or a <B>null</B> reference (<B>false</B> in PHP) on failure (invalid resource or row index).</returns>
        </member>
        <member name="M:PHP.Library.Data.MsSql.NextResult(PHP.Core.PhpResource)">
            <summary>
            Fetches the next result set if the query returned multiple result sets.
            </summary>
            <param name="resultHandle">Query result resource.</param>
            <returns>Whether the next result set is available.</returns>
        </member>
        <member name="M:PHP.Library.Data.MsSql.FieldName(PHP.Core.PhpResource)">
            <summary>
            Gets a name of the current column (field) in a result. 
            </summary>
            <param name="resultHandle">Query result resource.</param>
            <returns>Name of the column or a <B>null</B> reference on failure (invalid resource or column index).</returns>
        </member>
        <member name="M:PHP.Library.Data.MsSql.FieldName(PHP.Core.PhpResource,System.Int32)">
            <summary>
            Gets a name of a specified column (field) in a result. 
            </summary>
            <param name="resultHandle">Query result resource.</param>
            <param name="fieldIndex">Column (field) index.</param>
            <returns>Name of the column or a <B>null</B> reference on failure (invalid resource or column index).</returns>
        </member>
        <member name="M:PHP.Library.Data.MsSql.FieldType(PHP.Core.PhpResource)">
            <summary>
            Gets a type of the current column (field) in a result. 
            </summary>
            <param name="resultHandle">Query result resource.</param>
            <returns>MSSQL type translated to PHP terminology.</returns>
            <remarks>
            Possible values are: TODO.
            </remarks>   
        </member>
        <member name="M:PHP.Library.Data.MsSql.FieldType(PHP.Core.PhpResource,System.Int32)">
            <summary>
            Gets a type of a specified column (field) in a result. 
            </summary>
            <param name="resultHandle">Query result resource.</param>
            <param name="fieldIndex">Column index.</param>
            <returns>MSSQL type translated to PHP terminology.</returns>
            <remarks>
            Possible values are: TODO.
            </remarks>   
        </member>
        <member name="M:PHP.Library.Data.MsSql.FieldLength(PHP.Core.PhpResource)">
            <summary>
            Gets a length of the current column (field) in a result. 
            </summary>
            <param name="resultHandle">Query result resource.</param>
            <returns>Length of the column or a -1 on failure (invalid resource or column index).</returns>
        </member>
        <member name="M:PHP.Library.Data.MsSql.FieldLength(PHP.Core.PhpResource,System.Int32)">
            <summary>
            Gets a length of a specified column (field) in a result. 
            </summary>
            <param name="resultHandle">Query result resource.</param>
            <param name="fieldIndex">Column index.</param>
            <returns>Length of the column or a -1 on failure (invalid resource or column index).</returns>
        </member>
        <member name="M:PHP.Library.Data.MsSql.FieldSeek(PHP.Core.PhpResource,System.Int32)">
            <summary>
            Sets the result resource's current column (field) offset.
            </summary>
            <param name="resultHandle">Query result resource.</param>
            <param name="fieldOffset">New column offset.</param>
            <returns><B>true</B> on success, <B>false</B> on failure (invalid resource or column offset).</returns>
        </member>
        <member name="M:PHP.Library.Data.MsSql.DataSeek(PHP.Core.PhpResource,System.Int32)">
            <summary>
            Sets the result resource's current row index.
            </summary>
            <param name="resultHandle">Query result resource.</param>
            <param name="rowIndex">New row index.</param>
            <returns><B>true</B> on success, <B>false</B> on failure (invalid resource or row index).</returns>
        </member>
        <member name="M:PHP.Library.Data.MsSql.FetchField(PHP.Core.PhpResource)">
            <summary>
            Gets a PHP object whose properties describes the last fetched field.
            </summary>
            <param name="resultHandle">Query result resource.</param>
            <returns>The PHP object.</returns>
        </member>
        <member name="M:PHP.Library.Data.MsSql.FetchField(PHP.Core.PhpResource,System.Int32)">
            <summary>
            Gets a PHP object whose properties describes a specified field.
            </summary>
            <param name="resultHandle">Query result resource.</param>
            <param name="fieldIndex">Field index.</param>
            <returns>The PHP object.</returns>
        </member>
        <member name="M:PHP.Library.Data.MsSql.FetchBatch(PHP.Core.PhpResource)">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="M:PHP.Library.Data.MsSql.CreateProcedure(System.String)">
            <summary>
            Inicializes a stored procedure of a given name.
            </summary>
            <param name="procedureName">Name of the stored procedure.</param>
            <returns>Statement resource representing the procedure.</returns>
        </member>
        <member name="M:PHP.Library.Data.MsSql.CreateProcedure(System.String,PHP.Core.PhpResource)">
            <summary>
            Inicializes a stored procedure of a given name.
            </summary>
            <param name="procedureName">Name of the stored procedure.</param>
            <param name="linkIdentifier">Connection resource.</param>
            <returns>Statement resource representing the procedure.</returns>
        </member>
        <member name="M:PHP.Library.Data.MsSql.FreeStatement(PHP.Core.PhpResource)">
            <summary>
            Releases a resource represening a statement.
            </summary>
            <param name="statement">Statement resource.</param>
            <returns><B>true</B> on success, <B>false</B> on failure (invalid resource).</returns>
        </member>
        <member name="M:PHP.Library.Data.MsSql.Bind(PHP.Core.PhpResource,System.String,PHP.Core.PhpReference,PHP.Library.Data.MsSql.VariableType)">
            <summary>
            Binds a PHP variable to an SQL input parameter of a statement.
            </summary>
            <param name="statement">Statement resource.</param>
            <param name="parameterName">Parameter name starting with '@' character.</param>
            <param name="variable">PHP variable to bind to the parameter.</param>
            <param name="type">SQL type of the parameter.</param>
            <returns>Whether binding succeeded.</returns>
        </member>
        <member name="M:PHP.Library.Data.MsSql.Bind(PHP.Core.PhpResource,System.String,PHP.Core.PhpReference,PHP.Library.Data.MsSql.VariableType,System.Boolean)">
            <summary>
            Binds a PHP variable to an SQL parameter of a statement.
            </summary>
            <param name="statement">Statement resource.</param>
            <param name="parameterName">Parameter name starting with '@' character.</param>
            <param name="variable">PHP variable to bind to the parameter.</param>
            <param name="type">SQL type of the parameter.</param>
            <param name="isOutput">Whether the parameter is an output parameter.</param>
            <returns>Whether binding succeeded.</returns>
        </member>
        <member name="M:PHP.Library.Data.MsSql.Bind(PHP.Core.PhpResource,System.String,PHP.Core.PhpReference,PHP.Library.Data.MsSql.VariableType,System.Boolean,System.Boolean)">
            <summary>
            Binds a PHP variable to an SQL parameter of a statement.
            </summary>
            <param name="statement">Statement resource.</param>
            <param name="parameterName">Parameter name starting with '@' character.</param>
            <param name="variable">PHP variable to bind to the parameter.</param>
            <param name="type">SQL type of the parameter.</param>
            <param name="isOutput">Whether the parameter is an output parameter.</param>
            <param name="isNullable">Whether the parameter accepts <B>null</B> values.</param>
            <returns>Whether binding succeeded.</returns>
        </member>
        <member name="M:PHP.Library.Data.MsSql.Bind(PHP.Core.PhpResource,System.String,PHP.Core.PhpReference,PHP.Library.Data.MsSql.VariableType,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Binds a PHP variable to an SQL parameter of a statement.
            </summary>
            <param name="statement">Statement resource.</param>
            <param name="parameterName">Parameter name starting with '@' character.</param>
            <param name="variable">PHP variable to bind to the parameter.</param>
            <param name="type">SQL type of the parameter.</param>
            <param name="isOutput">Whether the parameter is an output parameter.</param>
            <param name="isNullable">Whether the parameter accepts <B>null</B> values.</param>
            <param name="maxLength">Maximum size of input data.</param>
            <returns>Whether binding succeeded.</returns>
        </member>
        <member name="M:PHP.Library.Data.MsSql.Execute(PHP.Core.PhpResource)">
            <summary>
            Executes a specified stored procedure statement.
            </summary>
            <param name="statement">Statement resource (stored procedure).</param>
            <returns>
            Result resource containing procedure output, 
            <B>true</B> if the procedure succeeded yet doesn't return any value, or
            <B>false</B> on failure.
            </returns>
        </member>
        <member name="M:PHP.Library.Data.MsSql.Execute(PHP.Core.PhpResource,System.Boolean)">
            <summary>
            Executes a specified stored procedure statement.
            </summary>
            <param name="statement">Statement resource (stored procedure).</param>
            <param name="skipResults">Whether to retrieve and return procedure output.</param>
            <returns>
            Result resource containing procedure output, 
            <B>true</B> if the procedure succeeded yet doesn't return any value, or
            <B>false</B> on failure.
            </returns>
        </member>
        <member name="M:PHP.Library.Data.MsSql.GuidToString(PHP.Core.PhpBytes)">
            <summary>
            Converts 16 bytes to a string representation of a GUID.
            </summary>
            <param name="binary">Binary representation of a GUID.</param>
            <returns>String representation of a GUID.</returns>
        </member>
        <member name="M:PHP.Library.Data.MsSql.GuidToString(PHP.Core.PhpBytes,System.Boolean)">
            <summary>
            Converts 16 bytes to a string representation of a GUID.
            </summary>
            <param name="binary">Binary representation of a GUID.</param>
            <param name="shortFormat">Whether to return a short format.</param>
            <returns>String representation of a GUID.</returns>
        </member>
        <member name="T:PHP.Library.Data.MsSql.QueryResultKeys">
            <summary>
            Query result array format.
            </summary>
        </member>
        <member name="F:PHP.Library.Data.MsSql.QueryResultKeys.ColumnNames">
            <summary>
            Add items keyed by column names.
            </summary>
        </member>
        <member name="F:PHP.Library.Data.MsSql.QueryResultKeys.Numbers">
            <summary>
            Add items keyed by column indices.
            </summary>
        </member>
        <member name="F:PHP.Library.Data.MsSql.QueryResultKeys.Both">
            <summary>
            Add both items keyed by column names and items keyd by column indices.
            </summary>
        </member>
        <member name="T:PHP.Library.Data.MsSql.VariableType">
            <summary>
            Types of variables bound to stored procedure parameters.
            </summary>
        </member>
        <member name="T:PHP.Library.Data.PhpSqlDbConnection">
            <summary>
            SQL connection resource.
            </summary>
        </member>
        <member name="M:PHP.Library.Data.PhpSqlDbConnection.#ctor(System.String,PHP.Core.ScriptContext)">
            <summary>
            Creates a new connection resource.
            </summary>
            <param name="connectionString">Connection string.</param>
            <param name="context">Script context associated with the connection.</param>
        </member>
        <member name="M:PHP.Library.Data.PhpSqlDbConnection.ValidConnection(PHP.Core.PhpResource)">
            <summary>
            Validates whether the specified handler is instance of PhpDbConnection type.
            </summary>
            <param name="handle"></param>
            <returns></returns>
        </member>
        <member name="M:PHP.Library.Data.PhpSqlDbConnection.GetResult(PHP.Library.Data.PhpDbConnection,System.Data.IDataReader,System.Boolean)">
            <summary>
            Gets a query result resource.
            </summary>
            <param name="connection">Database connection.</param>
            <param name="reader">Data reader to be used for result resource population.</param>
            <param name="convertTypes">Whether to convert data types to PHP ones.</param>
            <returns>Result resource holding all resulting data of the query.</returns>
        </member>
        <member name="M:PHP.Library.Data.PhpSqlDbConnection.CreateCommand">
            <summary>
            Command factory.
            </summary>
            <returns>An empty instance of <see cref="T:System.Data.SqlClient.SqlCommand"/>.</returns>
        </member>
        <member name="T:PHP.Library.Data.PhpSqlDbProcedure">
            <summary>
            Represets a stored procedure statement.
            </summary>
        </member>
        <member name="M:PHP.Library.Data.PhpSqlDbProcedure.#ctor(PHP.Library.Data.PhpDbConnection,System.String)">
            <summary>
            Creates a stored procedure statement.
            </summary>
            <param name="connection">Database connection.</param>
            <param name="procedureName">Procedure name.</param>
            <exception cref="T:System.ArgumentNullException">Argument is a <B>null</B> reference.</exception>
        </member>
        <member name="M:PHP.Library.Data.PhpSqlDbProcedure.Execute(System.Boolean,System.Boolean@)">
            <summary>
            Executes the procedure.
            </summary>
            <param name="skipResults">Whether to load the results.</param>
            <param name="success">Whether the execution succeeded.</param>
            <returns>Results or a <B>null</B> reference if results are not loaded or an error occured.</returns>
        </member>
        <member name="P:PHP.Library.Data.PhpSqlDbProcedure.ProcedureName">
            <summary>
            Procedure name.
            </summary>
        </member>
        <member name="T:PHP.Library.Data.PhpSqlDbResult">
            <summary>
            Represents a result of a SQL command.
            </summary>
        </member>
        <member name="M:PHP.Library.Data.PhpSqlDbResult.#ctor(PHP.Library.Data.PhpDbConnection,System.Data.IDataReader,System.Boolean)">
            <summary>
            Creates an instance of a result resource.
            </summary>
            <param name="connection">Database connection.</param>
            <param name="reader">Data reader from which to load results.</param>
            <param name="convertTypes">Whether to convert resulting values to PHP types.</param>
            <exception cref="T:System.ArgumentNullException">Argument is a <B>null</B> reference.</exception>
        </member>
        <member name="M:PHP.Library.Data.PhpSqlDbResult.GetNames">
            <summary>
            Gets an array of column names.
            </summary>
            <returns>
            Array of column names. If a column doesn't have a name (it is calculated), 
            it is assigned "computed{number}" name.
            </returns>
        </member>
        <member name="M:PHP.Library.Data.PhpSqlDbResult.GetValues(System.String[],System.Boolean)">
            <summary>
            Gets row values.
            </summary>
            <param name="dataTypes">Data type names.</param>
            <param name="convertTypes">Whether to convert value to PHP types.</param>
            <returns>Row data.</returns>
        </member>
        <member name="M:PHP.Library.Data.PhpSqlDbResult.ConvertDbValue(System.Object)">
            <summary>
            Converts a value from database to PHP value.
            </summary>
            <param name="dbValue">Database value.</param>
            <returns>PHP value.</returns>
        </member>
        <member name="M:PHP.Library.Data.PhpSqlDbResult.MapFieldTypeName(System.String)">
            <summary>
            Maps database type name to the one displayed by PHP.
            </summary>
            <param name="typeName">Database name.</param>
            <returns>PHP name.</returns>
        </member>
        <member name="M:PHP.Library.Data.PhpSqlDbResult.IsNumericType(System.String)">
            <summary>
            Determines whether a type of a specified PHP name is a numeric type.
            </summary>
            <param name="phpName">PHP type name.</param>
            <returns>Whether the type is numeric ("int", "numeric", or "real").</returns>
        </member>
        <member name="P:PHP.Library.Data.PhpSqlDbResult.BatchSize">
            <summary>
            Limit on size of a batch. Non-positive values means no limit.
            </summary>
        </member>
    </members>
</doc>
