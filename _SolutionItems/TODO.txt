============================================================================================
CURRENT NOTES
============================================================================================
PAGES:
- make blank section look nicer
- show icons on tree (inc. for enabled/disabled)
- remove "Create Sub Page" button after 3 levels
- move Page Types to separate page? Alternatively, make it more intuitive..
- make custom tinymce config (cant have widget zones in other editors- its for pages only)
- Delete sub pages when delete page (or move those subpages up 1 level)? Else they become orphans

- invariant culture not showing on lang switch

- pass admin email when register site
- overlay when install
- have lang switch by default?
- admin area link
- raven db support?
- SMS?
- twilio?
- make permissions checkbox list look nicer


- add ORDER to regions (that way can have USA or whatever at top of dropdowns, for example)
-EXPORT app_data on publish (and plugins)

- PAYMENT SYSTEM abtraction..like nop

- broken logging
	: UPDATE, 2015-06-15: Fixed one big problem. Need to monitor it now, but seems OK.



- allow deleting of translated pages (then prob we should also see history for it, etc..)
	- maybe this should happen when deleting the language? All pages, blocks, etc.. for that language get deleted

- page history must not show published version

- disallow SYSTEM message templates from being deleted. Only custom templates should be allowed to be deleted.

- cleanup View360 editor template (use tabs or accordion)

- plugin idea: live chat

- do validation for settings

- do we need a different default frontend layout path for mobile theme? probably...

- read through security guidlines as requested by Ran:
https://sites.google.com/site/muazkh/asp-net-mvc-security-and-hacking-defense-in-depth
- page types: have a "List" template? To show all records (for that type) in a grid, for example?

CONTENT BLOCK PROBLEM: TinyMCE should not be included by default and should be loaded from specific blocks that need it..
	this will also affect other libs (not only TinyMCE)..!

LOCALIZATION:
- Allow editing of invariant culture strings
- how to localize strings in StringLengthAttribute, etc?
- localize content blocks
- localize blog entries
- localize message templates
- localizable routes... then can have localized sitemap (see: https://support.google.com/webmasters/answer/2620865?hl=en)
		: Update: this is partly done now, but still has 2 issues:
		1. need to provide the invariant one ("en" by default or what? maybe configurable)
		2. need to duplicate the set of URLs for every language
		UPDATE 2015.06.16:
			If 0 or 1 languages configured, then create normal sitemap
			If 2 or more languages configured, then create the multi lang sitemap, but we need to know which of those languages is the default
- localize accoutn views
- localize error pages (404, etc)
- delete localized strings (and pages, widgets, etc) when delete language
- move localization admin to Kore.Web ?

FULL CALENDAR:
- Support Google Calendar
- Support loading events via AJAX

FORM BUILDER:
- At least use markitup or something instead of wysiwyg.
	- Helpful links:
		- http://www.layoutit.com/build?r=11468473
		- http://bootsnipp.com/forms
		- http://formoid.com/
		- http://www.jformer.com/
		- http://www.jotform.com/
		- http://getfuelux.com/formbuilder.html

CACHE
- Improve caching:
	- Trigger clearing of cache results when appropriate
	- Allow for Redis or other provider via interface
- Store Cache Keys as contants

OTHER
- Provide overloads for AutoMenu(), AutoSubmenu() and AutoBreadcrumbs() that don't require any template (just generate it for Bootstrap by default)
- need some way to provide descriptions/tooltips using an [Attribute] of some kind for widget properties (and page type properties too)..
- new sitemap html page (see nop for example)

- better error page handling:
	http://benfoster.io/blog/aspnet-mvc-custom-error-pages

- Make moment.js part of Kore? Can have ISettings for it.. etc. Same for TinyMCE and more.
- allowing email as username is a problem in cases like Blog!
- slugify automaticlly
- reusable image picker (Html Helper?)

- idea: generic import tool
	also: generic query tool like the one I did for GoQuo

- minify HTML?

- scheduled task to auto shrink db log file?

- review all TODO notes

- KoreUI: Icons
- dashboard widgets
- blog, store, etc for google sitemap (some kind of IPageProvider that can be used commongly for sitemap and also auto menus?)
  
- upgrade to OData v4?


- SIMPLE ECOMMERCE
  - comments/reviews
  - star ratings?
  - product images (use bootstrap file upload in edit mode)
  - product attributes (filter widget based on this + generic fields like price, etc)
 - make it more secure (PayPal) by removing BuyNow.cshtml and replacing it with c# code only (use HttpClient)

  - regions: add some button for importing common public data files (like MaxMind)
  
   - admin page for blocking some IPs (inc. import IP block list files)
  
  - use ajax pages for logged in users! gr8 idea!!! that way, keep good SEO and then have incentive for users to sign up as well
  
 -- NEED LOAD TESTING!!!!!!!!!!!!!!
  
  - TO CHECK: if multiple libs ref 1 shared lib, does that shared lib's dependencies get loaded multiple times? If yes, set a static variable to check whether its already loaded
  
  - REVISE AUTO CACHE KEYS IN Generic Service!! Because they might conflict (not unique) if have 2 entities with same name in diff library
  
- thin arrow for treeview sub items?

- use output caching more?
- plugins should be published along with site

- Use HTML5 semantic tags properly everywhere


- Create unique indexes where appropriate:
	http://stackoverflow.com/questions/23892553/creating-unique-index-with-entity-framework-6-1-fluent-api

TO TEST:
LocationFormatProvider can probably be used to make View() work without providing embedded view name. example:

return new[]
{
	"~/Themes/{3}/Kore.Web.ContentManagement/Areas/{2}/Views/{1}/{0}.cshtml",
	"~/Themes/{3}/Kore.Web.ContentManagement/Areas/{2}/Views/Shared/{0}.cshtml",
	"~/Areas/{2}/Views/Kore.Web.ContentManagement/{1}/{0}.cshtml",
	"~/Areas/{2}/Views/Kore.Web.ContentManagement/Shared/{0}.cshtml",
	"Kore.Web.ContentManagement.Areas.{2}.Views.{1}.{0}",
	"Kore.Web.ContentManagement.Areas.{2}.Views.Shared.{0}",
};

// probelm with this is area names have a slash.. example:  Admin/Pages (how to translate to Admin.Pages ?)

GOOGLE:
- add translate widget?

============================================================================================
OLDER NOTES
============================================================================================
TODO:
- Razor intellisense not working for class libraries


Learn more about "contenteditable" attribute:
http://html5doctor.com/the-contenteditable-attribute/

- investigate RequireJS ( see Durandal)

- don't load dependencies from web dll.. instead, provide a static class which can do that (call it from main app) if the dev wants (default) or else they can override the registrations with their own in the main app


FUTURE:
- Tenants (FUTURE VERSION - NOT INITIAL RELEASE)
- IOC Container (DI)... make it so can use any.. Autofac, Ninject, etc..
- Features System


- forums plugin,
- wiki plugin (roadkill?)
- Visitor Groups


Interesting:
http://www.barebonescoder.com/2013/11/dapper-vs-ef-6-part-1-setting-up-dapper/


- features system (enable/disable things.. dont load everything)
- manage features

IPlugin: a list of features can go here



- web api security (its protected so only logged on users can use it, but we may need to make changes to have it open for mobile, etc.. later)
	
NOT REALLY NEEDED ANYMORE:
- Implement JQColumnAttribute class for models.. then user just needs to do: .AddColumnFor(m=> m.ColumnName)
- jqGrid HTML Helper: SubGrid