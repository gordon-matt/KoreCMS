@using Kore.Web.ContentManagement.Areas.Admin.Blog
@using Kore.Web.Mvc

@model BlogSettings

<div id="settings-content">
    <div class="form-group">
        @Html.LabelFor(m => m.PageTitle, new { @class = "control-label" })
        @Html.TextBoxFor(m => m.PageTitle, new { @class = "form-control", data_bind = "value: pageTitle" })
        @Html.ValidationMessageFor(m => m.PageTitle)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.DateFormat, new { @class = "control-label" })
        @Html.TextBoxFor(m => m.DateFormat, new { @class = "form-control", data_bind = "value: dateFormat" })
        @Html.ValidationMessageFor(m => m.DateFormat)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ItemsPerPage, new { @class = "control-label" })
        @Html.TextBoxFor(m => m.ItemsPerPage, new { @class = "form-control", data_bind = "value: itemsPerPage" })
        @Html.ValidationMessageFor(m => m.ItemsPerPage)
    </div>
    <div class="form-group">
        <div class="checkbox">
            <label>
                @Html.CheckBoxFor(m => m.ShowOnMenus, new { data_bind = "checked: showOnMenus" }) @T(KoreCmsLocalizableStrings.Settings.Blog.ShowOnMenus)
            </label>
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.MenuPosition, new { @class = "control-label" })
        @Html.TextBoxFor(m => m.MenuPosition, new { @class = "form-control", data_bind = "value: menuPosition" })
        @Html.ValidationMessageFor(m => m.MenuPosition)
    </div>
    <div class="form-group">
        <div class="checkbox">
            <label>
                @Html.CheckBoxFor(m => m.UseAjax, new { data_bind = "checked: useAjax" }) @T(KoreCmsLocalizableStrings.Settings.Blog.UseAjax)
            </label>
        </div>
    </div>
    <div class="col-xs-12 col-sm-4 col-md-4 col-lg-4">
        <div class="form-group">
            @Html.Label("Roles", "Roles", new { @class = "control-label" })
            @Html.Kore().RolesCheckBoxList("Roles", null, new { @class = "checkbox" }, new { data_bind = "checked: roles" })
        </div>
    </div>
</div>

<script type="text/javascript">
    function updateModel(data) {
        viewModel.pageTitle = ko.observable("Blog");
        viewModel.dateFormat = ko.observable("YYYY-MM-DD HH:mm:ss");
        viewModel.itemsPerPage = ko.observable(5);
        viewModel.showOnMenus = ko.observable(true);
        viewModel.menuPosition = ko.observable(0);
        viewModel.useAjax = ko.observable(false);

        viewModel.accessRestrictions = null;
        viewModel.roles = ko.observableArray([]);
        
        if (data) {
            if (data.PageTitle) {
                viewModel.pageTitle(data.PageTitle);
            }
            if (data.DateFormat) {
                viewModel.dateFormat(data.DateFormat);
            }
            if (data.ItemsPerPage) {
                viewModel.itemsPerPage(data.ItemsPerPage);
            }
            if (data.ShowOnMenus && (typeof data.ShowOnMenus === 'boolean')) {
                viewModel.showOnMenus(data.ShowOnMenus);
            }
            if (data.MenuPosition) {
                viewModel.menuPosition(data.MenuPosition);
            }
            if (data.UseAjax && (typeof data.UseAjax === 'boolean')) {
                viewModel.useAjax(data.UseAjax);
            }
            if (data.AccessRestrictions) {
                viewModel.accessRestrictions = ko.mapping.fromJSON(data.AccessRestrictions);

                if (viewModel.accessRestrictions.Roles != null) {
                    var split = viewModel.accessRestrictions.Roles().split(',');
                    viewModel.roles(split);
                }
            }
        }
    };

    function cleanUp() {
        delete viewModel.pageTitle;
        delete viewModel.dateFormat;
        delete viewModel.itemsPerPage;
        delete viewModel.showOnMenus;
        delete viewModel.menuPosition;
        delete viewModel.useAjax;
        delete viewModel.roles;
    }

    function onBeforeSave() {
        var data = {
            PageTitle: viewModel.pageTitle(),
            DateFormat: viewModel.dateFormat(),
            ItemsPerPage: viewModel.itemsPerPage(),
            ShowOnMenus: viewModel.showOnMenus(),
            MenuPosition: viewModel.menuPosition(),
            UseAjax: viewModel.useAjax(),
            AccessRestrictions: JSON.stringify({
                Roles: viewModel.roles().join()
            })
        };

        viewModel.value(ko.mapping.toJSON(data));
    };
</script>