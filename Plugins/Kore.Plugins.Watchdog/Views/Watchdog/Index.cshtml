@using Kore.Plugins.Watchdog.Extensions
@using LocalizableStrings = Kore.Plugins.Watchdog.LocalizableStrings

@{
    Style.IncludeBundle("kendo-ui");
    Style.IncludeBundle("kore-icons");

    Script.IncludeBundle("kendo-ui");
    Script.IncludeBundle("knockout");
    Script.IncludeBundle("knockout-mapping");
    Script.IncludeBundle("notify");

    Script.IncludePluginScript("index.js");

    string rtlClass = IsRightToLeft ? "k-rtl" : string.Empty;
}

<div id="grid-section" class="row">
    <div class="col-md-12">
        <a data-bind="click: create" class="btn btn-primary">
            <i class="kore-icon kore-icon-add"></i>
            @T(KoreWebLocalizableStrings.General.Create)
        </a>
    </div>

    <div class="clearfix"></div>
    <br />

    <div class="col-md-12 @rtlClass">
        <div id="Grid"></div>
    </div>
</div>

<div id="form-section" class="row" style="display:none">
    <form id="form-section-form" role="form">
        <fieldset>
            <legend>Create</legend>
            <div class="col-sm-6 col-md-6">
                <div class="form-group">
                    @Html.Label("Url", "Url", new { @class = "control-label" })
                    <div class="input-group">
                        <span class="input-group-addon">
                            <i class="kore-icon kore-icon-globe"></i>
                        </span>
                        @Html.TextBox("Url", null, new { @class = "form-control", data_bind = "value: url" })
                    </div>
                </div>
            </div>
            <div class="col-sm-6 col-md-6">
                <div class="form-group">
                    @Html.Label("Password", "Password", new { @class = "control-label" })
                    <div class="input-group">
                        <span class="input-group-addon">
                            <i class="kore-icon kore-icon-password"></i>
                        </span>
                        @Html.Password("Password", null, new { @class = "form-control", data_bind = "value: password" })
                    </div>
                </div>
            </div>
            <div class="col-sm-12 col-md-12">
                <div class="form-group pull-right">
                    <button type="button" class="btn btn-default" data-bind="click: cancel">@T(KoreWebLocalizableStrings.General.Cancel)</button>
                    <button type="button" class="btn btn-primary" data-bind="click: save">@T(KoreWebLocalizableStrings.General.Save)</button>
                </div>
            </div>
        </fieldset>
    </form>
</div>

<script type="text/x-kendo-template" id="services-template">
    <div class="tabstrip">
        <ul>
            <li class="k-state-active">
                Services
            </li>
        </ul>
        <div>
            <div class="services-grid" id="services-grid-#=Id#"></div>
        </div>
    </div>
</script>

@section scripts {
    <script type="text/javascript">
        var gridPageSize = @SiteSettings.DefaultGridPageSize;
        var translations = {
            AddServiceError: '@T(LocalizableStrings.AddServiceError).Text',
            AddServiceSuccess: '@T(LocalizableStrings.AddServiceSuccess).Text',
            ConfirmStopService: '@T(LocalizableStrings.ConfirmStopService).Text',
            ConfirmRemoveService: '@T(LocalizableStrings.ConfirmRemoveService).Text',
            DeleteRecordConfirm: '@T(KoreWebLocalizableStrings.General.ConfirmDeleteRecord).Text',
            DeleteRecordError: '@T(KoreWebLocalizableStrings.General.DeleteRecordError).Text',
            DeleteRecordSuccess: '@T(KoreWebLocalizableStrings.General.DeleteRecordSuccess).Text',
            InsertRecordError: '@T(KoreWebLocalizableStrings.General.InsertRecordError).Text',
            InsertRecordSuccess: '@T(KoreWebLocalizableStrings.General.InsertRecordSuccess).Text',
            RemoveServiceError: '@T(LocalizableStrings.RemoveServiceError).Text',
            RemoveServiceSuccess: '@T(LocalizableStrings.RemoveServiceSuccess).Text',
            RestartServiceError: '@T(LocalizableStrings.RestartServiceError).Text',
            RestartServiceSuccess: '@T(LocalizableStrings.RestartServiceSuccess).Text',
            StartServiceError: '@T(LocalizableStrings.StartServiceError).Text',
            StartServiceSuccess: '@T(LocalizableStrings.StartServiceSuccess).Text',
            StopServiceError: '@T(LocalizableStrings.StopServiceError).Text',
            StopServiceSuccess: '@T(LocalizableStrings.StopServiceSuccess).Text',
        }
        var allowAddRemove = '@ViewBag.AllowAddRemove';
        var onlyShowWatched = '@ViewBag.OnlyShowWatched';
</script>
}