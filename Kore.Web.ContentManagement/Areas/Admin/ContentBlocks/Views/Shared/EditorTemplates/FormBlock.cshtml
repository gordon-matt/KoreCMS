@model Kore.Web.ContentManagement.Areas.Admin.ContentBlocks.FormBlock

<div id="block-content" class="row">
    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
        <div class="form-group">
            @Html.LabelFor(m => m.HtmlTemplate, new { @class = "control-label" })
            @Html.TextAreaFor(m => m.HtmlTemplate, new { @class = "form-control", data_bind = "wysiwyg: htmlTemplate, wysiwygConfig: tinyMCEConfig" })
        </div>
    </div>
    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
        <div class="form-group">
            @Html.LabelFor(m => m.ThankYouMessage, new { @class = "control-label" })
            @Html.TextAreaFor(m => m.ThankYouMessage, new { @class = "form-control", data_bind = "wysiwyg: thankYouMessage, wysiwygConfig: tinyMCEConfig" })
        </div>
    </div>
    <div class="col-xs-6 col-sm-6 col-md-6 col-lg-6">
        <div class="form-group">
            @Html.LabelFor(m => m.RedirectUrl, new { @class = "control-label" })
            @Html.TextBoxFor(m => m.RedirectUrl, new { @class = "form-control", data_bind = "value: redirectUrl" })
        </div>
    </div>
    <div class="col-xs-6 col-sm-6 col-md-6 col-lg-6">
        <div class="form-group">
            @Html.LabelFor(m => m.EmailAddress, new { @class = "control-label" })
            @Html.TextBoxFor(m => m.EmailAddress, new { @class = "form-control", data_bind = "value: emailAddress" })
        </div>
    </div>
    <div class="col-xs-6 col-sm-6 col-md-6 col-lg-6">
        <div class="form-group">
            <div class="checkbox">
                <label>
                    @Html.CheckBoxFor(m => m.UseAjax, new { data_bind = "checked: useAjax" }) @T(KoreCmsLocalizableStrings.ContentBlocks.FormBlock.UseAjax)
                </label>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    function stripHTML(html) {
        return $("<div/>").html(html).text();
    };

    var contentBlockModel = (function () {
        var f = {};
        f.updateModel = function () {
            viewModel.htmlTemplate = ko.observable("");
            viewModel.thankYouMessage = ko.observable("");
            viewModel.redirectUrl = ko.observable("");
            viewModel.emailAddress = ko.observable("");
            viewModel.useAjax = ko.observable(false);

            var data = ko.mapping.fromJSON(viewModel.blockValues());

            if (data) {
                if (data.HtmlTemplate) {
                    viewModel.htmlTemplate(data.HtmlTemplate());
                }
                if (data.ThankYouMessage) {
                    viewModel.thankYouMessage(data.ThankYouMessage());
                }
                if (data.RedirectUrl) {
                    viewModel.redirectUrl(data.RedirectUrl());
                }
                if (data.EmailAddress) {
                    viewModel.emailAddress(data.EmailAddress());
                }
                if (data.UseAjax) {
                    viewModel.useAjax(data.UseAjax());
                }
            }

            viewModel.tinyMCEConfig = koreDefaultTinyMCEConfig;
        };
        f.cleanUp = function () {
            delete viewModel.htmlTemplate;
            delete viewModel.thankYouMessage;
            delete viewModel.redirectUrl;
            delete viewModel.emailAddress;
            delete viewModel.useAjax;
        };
        f.onBeforeSave = function () {

            var thankYouMessage = viewModel.thankYouMessage();
            if (viewModel.useAjax()) {
                thankYouMessage = stripHTML(thankYouMessage);
            }

            var data = {
                HtmlTemplate: viewModel.htmlTemplate(),
                ThankYouMessage: thankYouMessage,
                RedirectUrl: viewModel.redirectUrl(),
                EmailAddress: viewModel.emailAddress(),
                UseAjax: viewModel.useAjax()
            };

            viewModel.blockValues(ko.mapping.toJSON(data));
        };
        return f;
    })();
</script>