@using Kore.Plugins.Ecommerce.Simple
@using Kore.Plugins.Ecommerce.Simple.Extensions
@using Kore.Plugins.Ecommerce.Simple.Models
@using Kore.Web.Mvc.KoreUI
@using LocalizableStrings = Kore.Plugins.Ecommerce.Simple.LocalizableStrings

@model CheckoutModel

@{
    Script.IncludeBundle("jqueryval");
    Script.IncludeBundle("kore/jqueryval");
    string currencyCode = ViewBag.CurrencyCode;
}

@using (Html.BeginForm("Confirm", "Checkout", new { area = string.Empty }, FormMethod.Post, new { id = "checkout-form", @class = "form-horizontal" }))
{
    <div class="row">
        <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
            <div class="panel panel-primary">
                <div class="panel-heading">
                    <h3 class="panel-title">@T(LocalizableStrings.BillingAddress)</h3>
                </div>
                <div class="panel-body">
                    <div class="form-group">
                        <div class="checkbox">
                            @*This form-group is here just to make these fields below align nicely with the same fields for shipping address*@
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.BillingAddress.GivenNames, new { @class = "control-label col-xs-3 col-sm-3 col-md-3 col-lg-3" })
                        <div class="col-xs-9 col-sm-9 col-md-9 col-lg-9">
                            <div class="input-group">
                                <span class="input-group-addon"><i class="kore-icon kore-icon-user"></i></span>
                                @Html.TextBoxFor(m => m.BillingAddress.GivenNames, new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(m => m.BillingAddress.GivenNames)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.BillingAddress.FamilyName, new { @class = "control-label col-xs-3 col-sm-3 col-md-3 col-lg-3" })
                        <div class="col-xs-9 col-sm-9 col-md-9 col-lg-9">
                            <div class="input-group">
                                <span class="input-group-addon"><i class="kore-icon kore-icon-user"></i></span>
                                @Html.TextBoxFor(m => m.BillingAddress.FamilyName, new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(m => m.BillingAddress.FamilyName)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.BillingAddress.Email, new { @class = "control-label col-xs-3 col-sm-3 col-md-3 col-lg-3" })
                        <div class="col-xs-9 col-sm-9 col-md-9 col-lg-9">
                            <div class="input-group">
                                <span class="input-group-addon"><i class="kore-icon kore-icon-mail"></i></span>
                                @Html.TextBoxFor(m => m.BillingAddress.Email, new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(m => m.BillingAddress.Email)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.BillingAddress.AddressLine1, new { @class = "control-label col-xs-3 col-sm-3 col-md-3 col-lg-3" })
                        <div class="col-xs-9 col-sm-9 col-md-9 col-lg-9">
                            <div class="input-group">
                                <span class="input-group-addon"><i class="kore-icon kore-icon-road"></i></span>
                                @Html.TextBoxFor(m => m.BillingAddress.AddressLine1, new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(m => m.BillingAddress.AddressLine1)
                        </div>
                    </div>
                    @*<div class="form-group">
                        @Html.LabelFor(m => m.BillingAddress.AddressLine2, new { @class = "control-label col-xs-3 col-sm-3 col-md-3 col-lg-3" })
                        <div class="col-xs-9 col-sm-9 col-md-9 col-lg-9">
                            <div class="input-group">
                                <span class="input-group-addon"><i class="kore-icon kore-icon-road"></i></span>
                                @Html.TextBoxFor(m => m.BillingAddress.AddressLine2, new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(m => m.BillingAddress.AddressLine2)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.BillingAddress.AddressLine3, new { @class = "control-label col-xs-3 col-sm-3 col-md-3 col-lg-3" })
                        <div class="col-xs-9 col-sm-9 col-md-9 col-lg-9">
                            <div class="input-group">
                                <span class="input-group-addon"><i class="kore-icon kore-icon-road"></i></span>
                                @Html.TextBoxFor(m => m.BillingAddress.AddressLine3, new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(m => m.BillingAddress.AddressLine3)
                        </div>
                    </div>*@
                    <div id="billing-country-group" class="form-group">
                        @Html.LabelFor(m => m.BillingAddress.CountryId, new { @class = "control-label col-xs-3 col-sm-3 col-md-3 col-lg-3" })
                        <div class="col-xs-9 col-sm-9 col-md-9 col-lg-9">
                            <div class="input-group">
                                <span class="input-group-addon"><i class="kore-icon kore-icon-globe"></i></span>
                                @Html.SimpleCommerce().CountryDropDownListFor(m => m.BillingAddress.CountryId, htmlAttributes: new { @class = "form-control", onchange = "billingCountry_onChange(this);" })
                            </div>
                            @Html.ValidationMessageFor(m => m.BillingAddress.CountryId)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.BillingAddress.CityId, new { @class = "control-label col-xs-3 col-sm-3 col-md-3 col-lg-3" })
                        <div class="col-xs-9 col-sm-9 col-md-9 col-lg-9">
                            <div class="input-group">
                                <span class="input-group-addon"><i class="kore-icon kore-icon-road"></i></span>
                                <select id="@Html.IdFor(m => m.BillingAddress.CityId)" class="form-control"></select>
                                @*@Html.TextBoxFor(m => m.BillingAddress.CityId, new { @class = "form-control" })*@
                            </div>
                            @Html.ValidationMessageFor(m => m.BillingAddress.CityId)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.BillingAddress.PostalCode, new { @class = "control-label col-xs-3 col-sm-3 col-md-3 col-lg-3" })
                        <div class="col-xs-9 col-sm-9 col-md-9 col-lg-9">
                            <div class="input-group">
                                <span class="input-group-addon"><i class="kore-icon kore-icon-road"></i></span>
                                @Html.TextBoxFor(m => m.BillingAddress.PostalCode, new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(m => m.BillingAddress.PostalCode)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.BillingAddress.PhoneNumber, new { @class = "control-label col-xs-3 col-sm-3 col-md-3 col-lg-3" })
                        <div class="col-xs-9 col-sm-9 col-md-9 col-lg-9">
                            <div class="input-group">
                                <span class="input-group-addon"><i class="kore-icon kore-icon-phone"></i></span>
                                @Html.TextBoxFor(m => m.BillingAddress.PhoneNumber, new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(m => m.BillingAddress.PhoneNumber)
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
            <div class="panel panel-primary">
                <div class="panel-heading">
                    <h3 class="panel-title">@T(LocalizableStrings.ShippingAddress)</h3>
                </div>
                <div class="panel-body">
                    <div class="form-group">
                        <div class="checkbox">
                            <div class="col-xs-12 col-sm-4 col-md-3 col-lg-3"></div>
                            <div class="col-xs-9 col-sm-9 col-md-9 col-lg-9">
                                <label>
                                    @Html.CheckBoxFor(m => m.ShippingAddressIsSameAsBillingAddress, new { onclick = "toggleShippingAddressSection();" }) @T(LocalizableStrings.ShippingAddressSameAsBillingAddress)
                                </label>
                            </div>
                        </div>
                    </div>
                    <div id="shipping-address">
                        <div class="form-group">
                            @Html.LabelFor(m => m.ShippingAddress.GivenNames, new { @class = "control-label col-xs-3 col-sm-3 col-md-3 col-lg-3" })
                            <div class="col-xs-9 col-sm-9 col-md-9 col-lg-9">
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="kore-icon kore-icon-user"></i></span>
                                    @Html.TextBoxFor(m => m.ShippingAddress.GivenNames, new { @class = "form-control" })
                                </div>
                                @Html.ValidationMessageFor(m => m.ShippingAddress.GivenNames)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.ShippingAddress.FamilyName, new { @class = "control-label col-xs-3 col-sm-3 col-md-3 col-lg-3" })
                            <div class="col-xs-9 col-sm-9 col-md-9 col-lg-9">
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="kore-icon kore-icon-user"></i></span>
                                    @Html.TextBoxFor(m => m.ShippingAddress.FamilyName, new { @class = "form-control" })
                                </div>
                                @Html.ValidationMessageFor(m => m.ShippingAddress.FamilyName)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.ShippingAddress.Email, new { @class = "control-label col-xs-3 col-sm-3 col-md-3 col-lg-3" })
                            <div class="col-xs-9 col-sm-9 col-md-9 col-lg-9">
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="kore-icon kore-icon-mail"></i></span>
                                    @Html.TextBoxFor(m => m.ShippingAddress.Email, new { @class = "form-control" })
                                </div>
                                @Html.ValidationMessageFor(m => m.ShippingAddress.Email)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.ShippingAddress.AddressLine1, new { @class = "control-label col-xs-3 col-sm-3 col-md-3 col-lg-3" })
                            <div class="col-xs-9 col-sm-9 col-md-9 col-lg-9">
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="kore-icon kore-icon-road"></i></span>
                                    @Html.TextBoxFor(m => m.ShippingAddress.AddressLine1, new { @class = "form-control" })
                                </div>
                                @Html.ValidationMessageFor(m => m.ShippingAddress.AddressLine1)
                            </div>
                        </div>
                        @*<div class="form-group">
                            @Html.LabelFor(m => m.ShippingAddress.AddressLine2, new { @class = "control-label col-xs-3 col-sm-3 col-md-3 col-lg-3" })
                            <div class="col-xs-9 col-sm-9 col-md-9 col-lg-9">
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="kore-icon kore-icon-road"></i></span>
                                    @Html.TextBoxFor(m => m.ShippingAddress.AddressLine2, new { @class = "form-control" })
                                </div>
                                @Html.ValidationMessageFor(m => m.ShippingAddress.AddressLine2)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.ShippingAddress.AddressLine3, new { @class = "control-label col-xs-3 col-sm-3 col-md-3 col-lg-3" })
                            <div class="col-xs-9 col-sm-9 col-md-9 col-lg-9">
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="kore-icon kore-icon-road"></i></span>
                                    @Html.TextBoxFor(m => m.ShippingAddress.AddressLine3, new { @class = "form-control" })
                                </div>
                                @Html.ValidationMessageFor(m => m.ShippingAddress.AddressLine3)
                            </div>
                        </div>*@
                        <div id="shipping-country-group" class="form-group">
                            @Html.LabelFor(m => m.ShippingAddress.CountryId, new { @class = "control-label col-xs-3 col-sm-3 col-md-3 col-lg-3" })
                            <div class="col-xs-9 col-sm-9 col-md-9 col-lg-9">
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="kore-icon kore-icon-globe"></i></span>
                                    @Html.SimpleCommerce().CountryDropDownListFor(m => m.ShippingAddress.CountryId, htmlAttributes: new { @class = "form-control", onchange = "shippingCountry_onChange(this);" })
                                </div>
                                @Html.ValidationMessageFor(m => m.ShippingAddress.CountryId)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.ShippingAddress.CityId, new { @class = "control-label col-xs-3 col-sm-3 col-md-3 col-lg-3" })
                            <div class="col-xs-9 col-sm-9 col-md-9 col-lg-9">
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="kore-icon kore-icon-road"></i></span>
                                    <select id="@Html.IdFor(m => m.ShippingAddress.CityId)" class="form-control"></select>
                                    @*@Html.TextBoxFor(m => m.ShippingAddress.CityId, new { @class = "form-control" })*@
                                </div>
                                @Html.ValidationMessageFor(m => m.ShippingAddress.CityId)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.ShippingAddress.PostalCode, new { @class = "control-label col-xs-3 col-sm-3 col-md-3 col-lg-3" })
                            <div class="col-xs-9 col-sm-9 col-md-9 col-lg-9">
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="kore-icon kore-icon-road"></i></span>
                                    @Html.TextBoxFor(m => m.ShippingAddress.PostalCode, new { @class = "form-control" })
                                </div>
                                @Html.ValidationMessageFor(m => m.ShippingAddress.PostalCode)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.ShippingAddress.PhoneNumber, new { @class = "control-label col-xs-3 col-sm-3 col-md-3 col-lg-3" })
                            <div class="col-xs-9 col-sm-9 col-md-9 col-lg-9">
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="kore-icon kore-icon-phone"></i></span>
                                    @Html.TextBoxFor(m => m.ShippingAddress.PhoneNumber, new { @class = "form-control" })
                                </div>
                                @Html.ValidationMessageFor(m => m.ShippingAddress.PhoneNumber)
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
            <div class="panel panel-primary">
                <div class="panel-heading">
                    <h3 class="panel-title">@T(LocalizableStrings.ShoppingCart)</h3>
                </div>
                <div class="panel-body">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th></th>
                                <th>@T(LocalizableStrings.CheckoutTable.Product)</th>
                                <th>@T(LocalizableStrings.CheckoutTable.Price)</th>
                                <th>@T(LocalizableStrings.CheckoutTable.Quantity)</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Cart.Items)
                            {
                                <tr>
                                    <td><img class="img-responsive" src="@item.ImageUrl" style="max-height:180px" /></td>
                                    <td>@item.ProductName</td>
                                    <td>@currencyCode @item.Price.ToString("N2")</td>
                                    <td>@item.Quantity</td>
                                </tr>
                            }
                        </tbody>
                        <tfoot>
                            <tr>
                                <td class="text-right" colspan="4">
                                    <h6>@T(LocalizableStrings.SubTotal) <strong>@currencyCode @Model.SubTotal.ToString("N2")</strong></h6>
                                    <h6>@T(LocalizableStrings.ShippingTotal) <strong>@currencyCode @Model.ShippingTotal.ToString("N2")</strong></h6>
                                    <h6>@T(LocalizableStrings.TaxTotal) <strong>@currencyCode @Model.TaxTotal.ToString("N2")</strong></h6>
                                    <h4>@T(LocalizableStrings.Total) <strong>@currencyCode @Model.GrandTotal.ToString("N2")</strong></h4>
                                </td>
                            </tr>
                        </tfoot>
                    </table>
                    <div class="pull-right">
                        <button type="submit" class="btn btn-success">
                            <i class="kore-icon kore-icon-ok"></i>
                            @T(KoreWebLocalizableStrings.General.Confirm)
                        </button>
                    </div>
                </div>
            </div>
        </article>
    </div>
}

@using (Script.AtFoot())
{
    <script type="text/javascript">
    var billingCountryId = '@Html.IdFor(m => m.BillingAddress.CountryId)';
    var shippingCountryId = '@Html.IdFor(m => m.ShippingAddress.CountryId)';

    $(document).ready(function () {
        var checkbox = $('#ShippingAddressIsSameAsBillingAddress');
        toggleShippingAddressSection(checkbox);

        $("#checkout-form").validate({
            rules: {
                BillingAddress_GivenNames: { required: true, maxlength: 128 },
                BillingAddress_FamilyName: { required: true, maxlength: 128 },
                BillingAddress_Email: { required: true, maxlength: 255 },
                BillingAddress_AddressLine1: { required: true, maxlength: 128 },
                BillingAddress_AddressLine2: { maxlength: 128 },
                BillingAddress_AddressLine3: { maxlength: 128 },
                BillingAddress_CountryId: { required: true },
                BillingAddress_CityId: { required: true },
                BillingAddress_PostalCode: { required: true, maxlength: 10 },
                BillingAddress_PhoneNumber: { required: true, maxlength: 25 },

                ShippingAddress_GivenNames: { required: checkIfShippingAddressSameAsBillingAddress(), maxlength: 128 },
                ShippingAddress_FamilyName: { required: checkIfShippingAddressSameAsBillingAddress(), maxlength: 128 },
                ShippingAddress_Email: { required: checkIfShippingAddressSameAsBillingAddress(), maxlength: 255 },
                ShippingAddress_AddressLine1: { required: checkIfShippingAddressSameAsBillingAddress(), maxlength: 128 },
                ShippingAddress_AddressLine2: { maxlength: 128 },
                ShippingAddress_AddressLine3: { maxlength: 128 },
                ShippingAddress_CountryId: { required: checkIfShippingAddressSameAsBillingAddress() },
                ShippingAddress_CityId: { required: checkIfShippingAddressSameAsBillingAddress() },
                ShippingAddress_PostalCode: { required: checkIfShippingAddressSameAsBillingAddress(), maxlength: 10 },
                ShippingAddress_PhoneNumber: { required: checkIfShippingAddressSameAsBillingAddress(), maxlength: 25 }
            }
        });

        billingCountry_onChange($('#' + billingCountryId));
        shippingCountry_onChange($('#' + shippingCountryId));

        var numberOfCountries = $('select#' + billingCountryId + ' option').length;
        if (numberOfCountries <= 1) {
            $("#billing-country-group").hide();
            $("#shipping-country-group").hide();
        }
    });

    function toggleShippingAddressSection() {
        if (checkIfShippingAddressSameAsBillingAddress()) {
            $('#shipping-address').hide();
        }
        else {
            $('#shipping-address').show();
        }
    };

    function checkIfShippingAddressSameAsBillingAddress() {
        return $("#ShippingAddressIsSameAsBillingAddress").is(":checked");
    };

    function billingCountry_onChange(element) {
        $('#@Html.IdFor(m => m.BillingAddress.CityId)').find('option').remove()

        var countryId = $(element).val();

        $.get("/store/checkout/get-cities/" + countryId, function (json) {
            $(json.Data).each(function (i, val) {
                $('#@Html.IdFor(m => m.BillingAddress.CityId)').append($('<option>', {
                    value: val.Id,
                    text: val.Name
                }));
            });
        });
    };

    function shippingCountry_onChange(element) {
        $('#@Html.IdFor(m => m.ShippingAddress.CityId)').find('option').remove()

        var countryId = $(element).val();

        $.get("/store/checkout/get-cities/" + countryId, function (json) {
            $(json.Data).each(function (i, val) {
                $('#@Html.IdFor(m => m.ShippingAddress.CityId)').append($('<option>', {
                    value: val.Id,
                    text: val.Name
                }));
            });
        });
    };
    </script>
}