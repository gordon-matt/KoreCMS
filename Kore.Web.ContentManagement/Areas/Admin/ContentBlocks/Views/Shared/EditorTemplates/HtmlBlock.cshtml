@model Kore.Web.ContentManagement.Areas.Admin.ContentBlocks.HtmlBlock

<div id="block-content">
    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
        <div class="form-group">
            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                @Html.LabelFor(m => m.BodyContent, new { @class = "control-label" })
                @Html.TextAreaFor(m => m.BodyContent, new { @class = "form-control", data_bind = "wysiwyg: blockModel.bodyContent, wysiwygConfig: blockModel.tinyMCEConfig" })
                @Html.HelpTextFor(m => m.BodyContent)
            </div>
        </div>
        <div class="form-group">
            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                @Html.LabelFor(m => m.Script, new { @class = "control-label" })
                @Html.TextAreaFor(m => m.Script, new { @class = "form-control", data_bind = "value: blockModel.script", rows = 7 })
                @Html.HelpTextFor(m => m.Script)
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    var contentBlockModel = (function () {
        var f = {};
        f.updateModel = function (blockModel) {
            blockModel.bodyContent = ko.observable("");
            blockModel.script = ko.observable("");

            var data = ko.mapping.fromJSON(blockModel.blockValues());

            if (data && data.BodyContent) {
                blockModel.bodyContent(data.BodyContent());
            }
            if (data && data.Script) {
                blockModel.script(data.Script());
            }

            blockModel.tinyMCEConfig = koreDefaultTinyMCEConfig;
        };
        f.cleanUp = function (blockModel) {
            delete blockModel.bodyContent;
            delete blockModel.script;
            delete blockModel.tinyMCEConfig;
        };
        f.onBeforeSave = function (blockModel) {
            var data = {
                BodyContent: blockModel.bodyContent(),
                Script: blockModel.script()
            };

            blockModel.blockValues(ko.mapping.toJSON(data));
        };
        return f;
    })();
</script>