@using Kore.Localization
@using Kore.Web.ContentManagement.Areas.Admin.Widgets

@model FormWidget

@{
    bool hasCssClass = !string.IsNullOrEmpty(Model.CssClass);
}

@if (hasCssClass)
{
    @Html.Raw(@"<div class=""@Model.CssClass"">")
}

@if (Model.ShowTitleOnPage)
{
    <header>
        <h3>@Model.Title</h3>
    </header>
}

<form method="post" action="@Url.Action("Save", "FormWidget", new { area = Constants.Areas.Widgets })" enctype="multipart/form-data">
    @Html.HiddenFor(m => m.ThankYouMessage)
    @Html.HiddenFor(m => m.RedirectUrl)
    @Html.HiddenFor(m => m.EmailAddress)
    @Html.Hidden("WidgetTitle", Model.Title)

    @{
        string htmlTemplate = Model.HtmlTemplate;
    }

    @if (Model.HtmlTemplate.Contains("[Captcha]"))
    {
        @Html.Hidden("EnableCaptcha", true)
        var localizer = LocalizationUtilities.Resolve();
        string captcha = FormWidget.GenerateCaptcha();
        htmlTemplate = htmlTemplate.Replace("[Captcha]", captcha);
        htmlTemplate = htmlTemplate.Replace("[CaptchaResponse]", string.Format(
            "<input type=\"text\" class=\"form-control form-captcha\" name=\"captcha_response\" data-val=\"true\" data-val-required=\"{0}\" /><span data-valmsg-for=\"captcha_response\" data-valmsg-replace=\"true\"></span>",
            localizer(Kore.Web.KoreWebLocalizableStrings.Validation.Required)));
    }
    else
    {
        @Html.Hidden("EnableCaptcha", false)
    }
    
    @Html.Raw(htmlTemplate)
</form>

@if (hasCssClass)
{
    @Html.Raw("</div>")
}