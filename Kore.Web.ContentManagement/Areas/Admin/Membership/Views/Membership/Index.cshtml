@using Kore.Web.ContentManagement

@{
    Layout = KoreWebConstants.DefaultAdminLayoutPath;
    
    Style.IncludeBundle("kendo-ui");

    Script.IncludeBundle("kendo-ui");
    Script.IncludeBundle("knockout");
    Script.IncludeBundle("knockout-mapping");
    Script.IncludeBundle("notify");

    Script.IncludeBundle("kore-cms/membership");

    string initialView = ViewBag.InitialView;
}

@Html.Partial("Kore.Web.ContentManagement.Areas.Admin.Membership.Views.Membership.Users")
@Html.Partial("Kore.Web.ContentManagement.Areas.Admin.Membership.Views.Membership.EditUser")
@Html.Partial("Kore.Web.ContentManagement.Areas.Admin.Membership.Views.Membership.EditUserRoles")
@Html.Partial("Kore.Web.ContentManagement.Areas.Admin.Membership.Views.Membership.ChangePassword")
@Html.Partial("Kore.Web.ContentManagement.Areas.Admin.Membership.Views.Membership.Roles")
@Html.Partial("Kore.Web.ContentManagement.Areas.Admin.Membership.Views.Membership.EditRole")
@Html.Partial("Kore.Web.ContentManagement.Areas.Admin.Membership.Views.Membership.EditRolePermissions")

@section scripts {
    <script type="text/javascript">
        $.validator.setDefaults({
            highlight: function (element) {
                $(element).closest('.form-group').addClass('has-error');
            },
            unhighlight: function (element) {
                $(element).closest('.form-group').removeClass('has-error');
            },
            errorElement: 'span',
            errorClass: 'help-block',
            errorPlacement: function (error, element) {
                if (element.parent('.input-group').length) {
                    error.insertAfter(element.parent());
                } else {
                    error.insertAfter(element);
                }
            }
        });

        var gridPageSize = @SiteSettings.DefaultGridPageSize;

        var translations = {
            ChangePasswordError: '@T(KoreCmsLocalizableStrings.Membership.ChangePasswordError).Text',
            ChangePasswordSuccess: '@T(KoreCmsLocalizableStrings.Membership.ChangePasswordSuccess).Text',
            Create: '@T(KoreWebLocalizableStrings.General.Create).Text',
            Delete: '@T(KoreWebLocalizableStrings.General.Delete).Text',
            DeleteRecordConfirm: '@T(KoreWebLocalizableStrings.General.ConfirmDeleteRecord).Text',
            DeleteRecordError: '@T(KoreWebLocalizableStrings.General.DeleteRecordError).Text',
            DeleteRecordSuccess: '@T(KoreWebLocalizableStrings.General.DeleteRecordSuccess).Text',
            Edit: '@T(KoreWebLocalizableStrings.General.Edit).Text',
            GetRecordError: '@T(KoreWebLocalizableStrings.General.GetRecordError).Text',
            InsertRecordError: '@T(KoreWebLocalizableStrings.General.InsertRecordError).Text',
            InsertRecordSuccess: '@T(KoreWebLocalizableStrings.General.InsertRecordSuccess).Text',
            Password: '@T(KoreCmsLocalizableStrings.Membership.Password).Text',
            Permissions: '@T(KoreCmsLocalizableStrings.Membership.Permissions).Text',
            Roles: '@T(KoreCmsLocalizableStrings.Membership.Roles).Text',
            SavePermissionsError: '@T(KoreCmsLocalizableStrings.Membership.SavePermissionsError).Text',
            SavePermissionsSuccess: '@T(KoreCmsLocalizableStrings.Membership.SavePermissionsSuccess).Text',
            SaveRolesError: '@T(KoreCmsLocalizableStrings.Membership.SaveRolesError).Text',
            SaveRolesSuccess: '@T(KoreCmsLocalizableStrings.Membership.SaveRolesSuccess).Text',
            UpdateRecordError: '@T(KoreWebLocalizableStrings.General.UpdateRecordError).Text',
            UpdateRecordSuccess: '@T(KoreWebLocalizableStrings.General.UpdateRecordSuccess).Text',

            Columns: {
                User: {
                    IsActive: '@T(KoreCmsLocalizableStrings.Membership.UserModel.IsActive).Text',
                    Roles: '@T(KoreCmsLocalizableStrings.Membership.UserModel.Roles).Text',
                    UserName: '@T(KoreCmsLocalizableStrings.Membership.UserModel.UserName).Text',
                },
                Role: {
                    Name: '@T(KoreCmsLocalizableStrings.Membership.RoleModel.Name).Text',
                },
                Permission: {
                    Category: '@T(KoreCmsLocalizableStrings.Membership.PermissionModel.Category).Text',
                    Name: '@T(KoreCmsLocalizableStrings.Membership.PermissionModel.Name).Text',
                }
            }
        }

        var emptyGuid = '00000000-0000-0000-0000-000000000000';
        var currentSection = $("#users-grid-section");

        function switchSection(section) {
            currentSection.hide("fast");
            section.show("fast");
            currentSection = section;
        };

        @if (initialView == "Role")
        {
            @:switchSection($("#roles-grid-section"));
        }
    </script>
}
