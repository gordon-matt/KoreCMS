@using Kore.Plugins.Widgets.RoyalVideoPlayer
@using Kore.Web.ContentManagement

@model RoyalVideoPlayerBlock

<div id="block-content">
    <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
        <div class="form-group">
            @Html.LabelFor(m => m.PlaylistId, new { @class = "control-label col-xs-12 col-sm-4 col-md-3 col-lg-3" })
            <div class="col-xs-12 col-sm-8 col-md-9 col-lg-9">
                @Html.RoyalVideoPlayer().PlaylistDropDownListFor(m => m.PlaylistId, new { @class = "form-control", data_bind = "value: blockModel.playlistId" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Skin, new { @class = "control-label col-xs-12 col-sm-4 col-md-3 col-lg-3" })
            <div class="col-xs-12 col-sm-8 col-md-9 col-lg-9">
                @Html.EnumDropDownListFor(m => m.Skin, new { @class = "form-control", data_bind = "value: blockModel.skin" })
            </div>
        </div>
    </div>
    <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
        <div class="form-group">
            @Html.LabelFor(m => m.PlaylistPosition, new { @class = "control-label col-xs-12 col-sm-4 col-md-3 col-lg-3" })
            <div class="col-xs-12 col-sm-8 col-md-9 col-lg-9">
                @Html.EnumDropDownListFor(m => m.PlaylistPosition, new { @class = "form-control", data_bind = "value: blockModel.playlistPosition" })
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    var contentBlockModel = (function () {
        var f = {};
        f.updateModel = function () {
            viewModel.blockModel.playlistId = ko.observable(0);
            viewModel.blockModel.skin = ko.observable(0);
            viewModel.blockModel.playlistPosition = ko.observable(0);

            var data = ko.mapping.fromJSON(viewModel.blockModel.blockValues());

            if ((isFunction(data) && data()) || data) {
                if (data.PlaylistId == undefined) {
                    // If this is not set, it means the contentBlock is new and we have nothing in blockValues
                    return;
                }
                viewModel.blockModel.playlistId(data.PlaylistId());

                if (data.Skin()) {
                    viewModel.blockModel.skin(data.Skin());
                }
                if (data.PlaylistPosition) {
                    viewModel.blockModel.playlistPosition(data.PlaylistPosition());
                }
            }
        };
        f.cleanUp = function () {
            delete viewModel.blockModel.playlistId;
            delete viewModel.blockModel.skin;
            delete viewModel.blockModel.playlistPosition;
        };
        f.onBeforeSave = function () {
            var data = {
                PlaylistId: viewModel.blockModel.playlistId(),
                Skin: viewModel.blockModel.skin(),
                PlaylistPosition: viewModel.blockModel.playlistPosition(),
            };

            viewModel.blockModel.blockValues(ko.mapping.toJSON(data));
        };
        return f;
    })();
</script>