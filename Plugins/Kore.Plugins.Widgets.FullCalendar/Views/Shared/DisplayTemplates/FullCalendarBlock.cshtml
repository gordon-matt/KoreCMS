@using Kore.Infrastructure
@using Kore.Plugins.Widgets.FullCalendar
@using Kore.Plugins.Widgets.FullCalendar.Extensions
@using Kore.Plugins.Widgets.FullCalendar.Services
@model Kore.Plugins.Widgets.FullCalendar.ContentBlocks.FullCalendarBlock

@{
    Style.IncludePluginStyle("fullcalendar.min.css");
    Style.IncludePluginStyle("fullcalendar.print.css", htmlAttributes: new { media = "print" });
    //Script.IncludeExternal("//cdnjs.cloudflare.com/ajax/libs/moment.js/2.10.3/moment.min.js");
    Script.IncludeBundle("third-party/momentjs");
    Script.IncludePluginScript("fullcalendar-2.3.1/fullcalendar.min.js");

    string lang = WorkContext.CurrentCultureCode.LeftOf('-');
    
    if (lang != "en")
    {
        Script.IncludePluginScript("fullcalendar-2.3.1/lang/" + lang + ".js");
    }
    
    var eventService = EngineContext.Current.Resolve<ICalendarEventService>();
    var events = eventService.Find(x => x.CalendarId == Model.CalendarId);
    string json = events.Select(x => new
    {
        title = x.Name,
        start = x.StartDateTime,
        end = x.EndDateTime
    }).ToJson();
    string blockId = "calendar-" + Guid.NewGuid();
}

<div id="@blockId"></div>

@using (Script.AtFoot())
{
    <script type="text/javascript">
        $('#@blockId').fullCalendar({
            header: {
                left: 'prev,next today',
                center: 'title',
                right: 'month,agendaWeek,agendaDay'
            },
            isRTL: @IsRightToLeft.ToString().ToLowerInvariant(),
            @if (Model.FirstDay != DayOfWeek.Sunday)
            {
                @:firstDay: @((int)Model.FirstDay),
            }
            theme: @Model.Theme.ToString().ToLowerInvariant(),
            weekends: @Model.Weekends.ToString().ToLowerInvariant(),
            fixedWeekCount: @Model.FixedWeekCount.ToString().ToLowerInvariant(),
            weekNumbers: @Model.WeekNumbers.ToString().ToLowerInvariant(),
            @if (Model.AspectRatio != 1.35f)
            {
                @:aspectRatio: @Model.AspectRatio,
            }
            handleWindowResize: @Model.HandleWindowResize.ToString().ToLowerInvariant(),
            
            allDaySlot: @Model.AllDaySlot.ToString().ToLowerInvariant(),
            @if (!string.IsNullOrEmpty(Model.AllDayText))
            {
                @:allDayText: '@Model.AllDayText',
            }
            @if (Model.SlotDuration != "00:30:00")
            {
                @:slotDuration: '@Model.SlotDuration',
            }
            @if (Model.ScrollTime != "06:00:00")
            {
                @:scrollTime: '@Model.ScrollTime',
            }
            @if (Model.MinTime != "00:00:00")
            {
                @:minTime: '@Model.MinTime',
            }
            @if (Model.MaxTime != "24:00:00")
            {
                @:maxTime: '@Model.MaxTime',
            }
            slotEventOverlap: @Model.SlotEventOverlap.ToString().ToLowerInvariant(),
            
            selectable: @Model.Selectable.ToString().ToLowerInvariant(),
            unselectAuto: @Model.UnselectAuto.ToString().ToLowerInvariant(),
            selectOverlap: @Model.SelectOverlap.ToString().ToLowerInvariant(),
            @if (!string.IsNullOrEmpty(Model.EventColor))
            {
                @:eventColor: '@Model.EventColor',
            }
            @if (!string.IsNullOrEmpty(Model.EventBackgroundColor))
            {
                @:eventBackgroundColor: '@Model.EventBackgroundColor',
            }
            @if (!string.IsNullOrEmpty(Model.EventBorderColor))
            {
                @:eventBorderColor: '@Model.EventBorderColor',
            }
            @if (!string.IsNullOrEmpty(Model.EventTextColor))
            {
                @:eventTextColor: '@Model.EventTextColor',
            }
            @if (Model.NextDayThreshold != "09:00:00")
            {
                @:nextDayThreshold: '@Model.NextDayThreshold',
            }
            events: @Html.Raw(json)
        });
    </script>
}