@using Kore.Plugins.Widgets.RevolutionSlider
@using Kore.Plugins.Widgets.RevolutionSlider.Data.Domain
@using Kore.Plugins.Widgets.RevolutionSlider.Extensions
@using Kore.Web.Mvc.KoreUI
@using WebEnumExtensions = Kore.Web.EnumExtensions

@{
    Layout = KoreWebConstants.DefaultAdminLayoutPath;

    Style.IncludeBundle("kendo-ui");

    Script.IncludeBundle("kendo-ui");
    Script.IncludeBundle("breeze");
    Script.IncludeBundle("knockout");
    Script.IncludeBundle("notify");

    Script.IncludeBundle("kore-cms/bootpag");
    Script.IncludeBundle("kore/common");
    Script.IncludeBundle("kore/section-switching");
    Script.IncludeBundle("kore/jqueryval");
    Script.IncludePluginScript("index.js");

    string rtlClass = IsRightToLeft ? "k-rtl" : string.Empty;
}

<style type="text/css">
    .thumbnail {
        margin-bottom: 0px !important;
    }

    .modal-dialog {
        width: 80% !important;
    }
</style>

<div id="sliders-grid-section" class="row">
    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
        <a data-bind="click: slider.create" class="btn btn-primary">
            <i class="kore-icon kore-icon-add"></i>
            @T(KoreWebLocalizableStrings.General.Create)
        </a>
    </div>

    <div class="clearfix"></div>
    <br />

    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 @rtlClass">
        <div id="SliderGrid"></div>
    </div>
</div>

<div id="sliders-form-section" class="row" style="display:none">
    <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
        @using (var panel = Html.KoreUI().Begin(new Panel(state: State.Primary)))
        {
            using (var header = panel.BeginHeader(T(KoreWebLocalizableStrings.General.Details))) { }
            using (var body = panel.BeginBody())
            {
                <form id="sliders-form-section-form" role="form">
                    <fieldset>
                        <legend id="sliders-form-section-legend"></legend>
                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            <div class="form-group">
                                @Html.Label("Name", T(LocalizableStrings.Models.Slider.Name), new { @class = "control-label" })
                                @Html.TextBox("Name", null, new { @class = "form-control", data_bind = "value: slider.name" })
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            <div class="form-group pull-right">
                                <button type="button" class="btn btn-default" data-bind="click: slider.cancel">@T(KoreWebLocalizableStrings.General.Cancel)</button>
                                <button type="button" class="btn btn-primary" data-bind="click: slider.save"><i class="kore-icon kore-icon-save"></i> @T(KoreWebLocalizableStrings.General.Save)</button>
                            </div>
                        </div>
                    </fieldset>
                </form>
            }
        }
    </article>
</div>

<div id="slides-grid-section" class="row" style="display:none">
    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
        <a data-bind="click: slide.create" class="btn btn-primary">
            <i class="kore-icon kore-icon-add"></i>
            @T(KoreWebLocalizableStrings.General.Create)
        </a>
        <a data-bind="click: slide.goBack" class="btn btn-default">
            <i class="kore-icon kore-icon-arrow-left"></i>
            @T(KoreWebLocalizableStrings.General.Back)
        </a>
    </div>

    <div class="clearfix"></div>
    <br />

    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 @rtlClass">
        <div id="SlideGrid"></div>
    </div>
</div>

<div id="slides-form-section" class="row" style="display:none">
    <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
        @using (var panel = Html.KoreUI().Begin(new Panel(state: State.Primary)))
        {
            using (var header = panel.BeginHeader(T(KoreWebLocalizableStrings.General.Details))) { }
            using (var body = panel.BeginBody())
            {
                <form id="slides-form-section-form" role="form">
                    <fieldset>
                        <legend id="slides-form-section-legend"></legend>
                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            <div class="form-group">
                                @Html.Label("Title", T(LocalizableStrings.Models.Slide.Title), new { @class = "control-label" })
                                @Html.TextBox("Title", null, new { @class = "form-control", data_bind = "value: slide.title" })
                            </div>
                        </div>
                        @*<div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            <div class="form-group">
                                @Html.Label("SliderId", T(LocalizableStrings.Models.Slide.SliderId), new { @class = "control-label" })
                                @Html.RevolutionSlider().SliderDropDownList("SliderId", htmlAttributes: new { @class = "form-control", data_bind = "value: slide.sliderId" })
                            </div>
                        </div>*@
                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            <div class="form-group">
                                @Html.Label("Order", T(LocalizableStrings.Models.Slide.Order), new { @class = "control-label" })
                                @Html.TextBox("Order", null, new { @class = "form-control", data_bind = "value: slide.order" })
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            <div class="form-group">
                                @Html.Label("Transition", T(LocalizableStrings.Models.Slide.Transition), new { @class = "control-label" })
                                @Html.DropDownList(
                                    "Transition",
                                    WebEnumExtensions.ToSelectList<Transition>(emptyText: string.Empty, nameIsId: true),
                                    new { @class = "form-control", data_bind = "value: slide.transition" })
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
                            <div class="checkbox">
                                <label>
                                    @Html.CheckBox("RandomTransition", new { data_bind = "checked: slide.randomTransition" }) @T(LocalizableStrings.Models.Slide.RandomTransition)
                                </label>
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            <div class="form-group">
                                @Html.Label("SlotAmount", T(LocalizableStrings.Models.Slide.SlotAmount), new { @class = "control-label" })
                                @Html.TextBox("SlotAmount", null, new { @class = "form-control", data_bind = "value: slide.slotAmount" })
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            <div class="form-group">
                                @Html.Label("MasterSpeed", T(LocalizableStrings.Models.Slide.MasterSpeed), new { @class = "control-label" })
                                @Html.TextBox("MasterSpeed", null, new { @class = "form-control", data_bind = "value: slide.masterSpeed" })
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            <div class="form-group">
                                @Html.Label("Delay", T(LocalizableStrings.Models.Slide.Delay), new { @class = "control-label" })
                                @Html.TextBox("Delay", null, new { @class = "form-control", data_bind = "value: slide.delay" })
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            <div class="form-group">
                                @Html.Label("Link", T(LocalizableStrings.Models.Slide.Link), new { @class = "control-label" })
                                @Html.TextBox("Link", null, new { @class = "form-control", data_bind = "value: slide.link" })
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            <div class="form-group">
                                @Html.Label("Order", T(LocalizableStrings.Models.Slide.Order), new { @class = "control-label" })
                                @Html.TextBox("Order", null, new { @class = "form-control", data_bind = "value: slide.order" })
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            <div class="form-group">
                                @Html.Label("Target", T(LocalizableStrings.Models.Slide.Target), new { @class = "control-label" })
                                @Html.DropDownList(
                                    "Target",
                                    WebEnumExtensions.ToSelectList<PageTarget>(emptyText: string.Empty, nameIsId: true),
                                    new { @class = "form-control", data_bind = "value: slide.target" })
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            <div class="form-group">
                                @Html.Label("SlideIndex", T(LocalizableStrings.Models.Slide.SlideIndex), new { @class = "control-label" })
                                @Html.TextBox("SlideIndex", null, new { @class = "form-control", data_bind = "value: slide.slideIndex" })
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            <div class="form-group">
                                @Html.Label("Thumb", T(LocalizableStrings.Models.Slide.Thumb), new { @class = "control-label" })
                                @Html.TextBox("Thumb", null, new { @class = "form-control", data_bind = "value: slide.thumb" })
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
                            <div class="checkbox">
                                <label>
                                    @Html.CheckBox("LazyLoad", new { data_bind = "checked: slide.lazyLoad" }) @T(LocalizableStrings.Models.Slide.LazyLoad)
                                </label>
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            <div class="form-group">
                                @Html.Label("BackgroundRepeat", T(LocalizableStrings.Models.Slide.BackgroundRepeat), new { @class = "control-label" })
                                @Html.DropDownList(
                                    "BackgroundRepeat",
                                    WebEnumExtensions.ToSelectList<BackgroundRepeat>(emptyText: string.Empty, nameIsId: true),
                                    new { @class = "form-control", data_bind = "value: slide.backgroundRepeat" })
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            <div class="form-group">
                                @Html.Label("BackgroundFit", T(LocalizableStrings.Models.Slide.BackgroundFit), new { @class = "control-label" })
                                @Html.DropDownList(
                                    "BackgroundFit",
                                    WebEnumExtensions.ToSelectList<BackgroundFit>(emptyText: string.Empty, nameIsId: true),
                                    new { @class = "form-control", data_bind = "value: slide.backgroundFit" })
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            <div class="form-group">
                                @Html.Label("BackgroundFitCustomValue", T(LocalizableStrings.Models.Slide.BackgroundFitCustomValue), new { @class = "control-label" })
                                @Html.TextBox("BackgroundFitCustomValue", null, new { @class = "form-control", data_bind = "value: slide.backgroundFitCustomValue" })
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            <div class="form-group">
                                @Html.Label("BackgroundFitEnd", T(LocalizableStrings.Models.Slide.BackgroundFitEnd), new { @class = "control-label" })
                                @Html.TextBox("BackgroundFitEnd", null, new { @class = "form-control", data_bind = "value: slide.backgroundFitEnd" })
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            <div class="form-group">
                                @Html.Label("BackgroundPosition", T(LocalizableStrings.Models.Slide.BackgroundPosition), new { @class = "control-label" })
                                @Html.DropDownList(
                                    "BackgroundPosition",
                                    WebEnumExtensions.ToSelectList<BackgroundPosition>(emptyText: string.Empty, nameIsId: true),
                                    new { @class = "form-control", data_bind = "value: slide.backgroundPosition" })
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            <div class="form-group">
                                @Html.Label("BackgroundPositionEnd", T(LocalizableStrings.Models.Slide.BackgroundPositionEnd), new { @class = "control-label" })
                                @Html.DropDownList(
                                    "BackgroundPosition",
                                    WebEnumExtensions.ToSelectList<BackgroundPosition>(emptyText: string.Empty, nameIsId: true),
                                    new { @class = "form-control", data_bind = "value: slide.backgroundPositionEnd" })
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
                            <div class="checkbox">
                                <label>
                                    @Html.CheckBox("KenBurnsEffect", new { data_bind = "checked: slide.kenBurnsEffect" }) @T(LocalizableStrings.Models.Slide.KenBurnsEffect)
                                </label>
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            <div class="form-group">
                                @Html.Label("Duration", T(LocalizableStrings.Models.Slide.Duration), new { @class = "control-label" })
                                @Html.TextBox("Duration", null, new { @class = "form-control", data_bind = "value: slide.duration" })
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            <div class="form-group">
                                @Html.Label("Easing", T(LocalizableStrings.Models.Slide.Easing), new { @class = "control-label" })
                                @Html.DropDownList(
                                    "Easing",
                                    WebEnumExtensions.ToSelectList<EasingMethod>(emptyText: string.Empty, nameIsId: true),
                                    new { @class = "form-control", data_bind = "value: slide.easing" })
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            <div class="form-group pull-right">
                                <button type="button" class="btn btn-default" data-bind="click: slide.cancel">@T(KoreWebLocalizableStrings.General.Cancel)</button>
                                <button type="button" class="btn btn-primary" data-bind="click: slide.save"><i class="kore-icon kore-icon-save"></i> @T(KoreWebLocalizableStrings.General.Save)</button>
                            </div>
                        </div>
                    </fieldset>
                </form>
            }
        }
    </article>
</div>

@section scripts {
    <script type="text/javascript">
        var gridPageSize = @SiteSettings.DefaultGridPageSize;
        var translations = {
            Create: '@T(KoreWebLocalizableStrings.General.Create).Text',
            Delete: '@T(KoreWebLocalizableStrings.General.Delete).Text',
            DeleteRecordConfirm: '@T(KoreWebLocalizableStrings.General.ConfirmDeleteRecord).Text',
            DeleteRecordError: '@T(KoreWebLocalizableStrings.General.DeleteRecordError).Text',
            DeleteRecordSuccess: '@T(KoreWebLocalizableStrings.General.DeleteRecordSuccess).Text',
            Edit: '@T(KoreWebLocalizableStrings.General.Edit).Text',
            GetRecordError: '@T(KoreWebLocalizableStrings.General.GetRecordError).Text',
            InsertRecordError: '@T(KoreWebLocalizableStrings.General.InsertRecordError).Text',
            InsertRecordSuccess: '@T(KoreWebLocalizableStrings.General.InsertRecordSuccess).Text',
            Sliders: '@T(LocalizableStrings.Sliders).Text',
            Slides: '@T(LocalizableStrings.Slides).Text',
            UpdateRecordError: '@T(KoreWebLocalizableStrings.General.UpdateRecordError).Text',
            UpdateRecordSuccess: '@T(KoreWebLocalizableStrings.General.UpdateRecordSuccess).Text',

            Columns:{
                Slider: {
                    Name: '@T(LocalizableStrings.Models.Slider.Name).Text'
                },
                Slide: {
                    Order: '@T(LocalizableStrings.Models.Slide.Order).Text',
                    Title: '@T(LocalizableStrings.Models.Slide.Title).Text',
                    Link: '@T(LocalizableStrings.Models.Slide.Link).Text',
                }
            }
        }

        $(document).ready(function() {
            currentSection = $("#sliders-grid-section");
        });
    </script>
}