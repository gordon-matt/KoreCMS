@model Kore.Plugins.Ecommerce.Simple.ContentBlocks.CheckoutLinkBlock

<div id="block-content">
    <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
        <div class="form-group">
            @Html.LabelFor(m => m.CssClass, new { @class = "control-label col-xs-12 col-sm-4 col-md-3 col-lg-3" })
            <div class="col-xs-12 col-sm-8 col-md-9 col-lg-9">
                @Html.TextBoxFor(m => m.CssClass, new { @class = "form-control", data_bind = "value: blockModel.cssClass" })
            </div>
        </div>
    </div>
    <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
        <div class="form-group">
            @Html.LabelFor(m => m.IconCssClass, new { @class = "control-label col-xs-12 col-sm-4 col-md-3 col-lg-3" })
            <div class="col-xs-12 col-sm-8 col-md-9 col-lg-9">
                @Html.TextBoxFor(m => m.IconCssClass, new { @class = "form-control", data_bind = "value: blockModel.iconCssClass" })
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    var contentBlockModel = (function () {
        var f = {};
        f.updateModel = function () {
            viewModel.blockModel.cssClass = ko.observable("btn btn-success");
            viewModel.blockModel.iconCssClass = ko.observable("kore-icon kore-icon-shopping-cart");

            var data = ko.mapping.fromJSON(viewModel.blockModel.blockValues());

            if (data) {
                if (data.CssClass) {
                    viewModel.blockModel.cssClass(data.CssClass());
                }
                if (data.IconCssClass) {
                    viewModel.blockModel.iconCssClass(data.IconCssClass());
                }
            }
        };
        f.cleanUp = function () {
            delete viewModel.blockModel.cssClass;
            delete viewModel.blockModel.iconCssClass;
        };
        f.onBeforeSave = function () {
            var data = {
                CssClass: viewModel.blockModel.cssClass(),
                IconCssClass: viewModel.blockModel.iconCssClass()
            };

            viewModel.blockModel.blockValues(ko.mapping.toJSON(data));
        };
        return f;
    })();
</script>