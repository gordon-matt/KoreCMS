@using Kore.Infrastructure
@using Kore.Plugins.Ecommerce.Simple
@using Kore.Plugins.Ecommerce.Simple.Data.Domain
@model IEnumerable<SimpleCommerceProduct>

@{
    Script.IncludeBundle("third-party/bootpag");

    var settings = EngineContext.Current.Resolve<StoreSettings>();
    ViewBag.Title = settings.PageTitle;

    string categorySlug = ViewBag.CategorySlug;
    int pageCount = ViewBag.PageCount;
    int pageIndex = ViewBag.PageIndex;

    int index = 1;
    int loopCount = 1;

    SetMeta("keywords", (string)ViewBag.MetaKeywords);
    SetMeta("description", (string)ViewBag.MetaDescription);
}

<div class="row">
    <div id="store-filter" class="col-xs-12 col-sm-6 col-md-3 col-lg-3">
        @Html.Action("Filter", "Store", new { area = string.Empty })
    </div>
    <div id="products-container" class="col-xs-12 col-sm-6 col-md-9 col-lg-9">
        @foreach (var entry in Model)
        {
            if (loopCount == 1)
            {
                @Html.Raw(@"<div class=""row"">")
            }

            string imageUrl = string.IsNullOrEmpty(entry.MainImageUrl)
                ? "http://placehold.it/280x136&text=Image+Missing"
                : entry.MainImageUrl;

                <div class="col-xs-4 col-sm-4 col-md-4 col-lg-4">
                    <div class="thumbnail">
                        @Html.ImageLink(
                            imageUrl,
                            entry.Name,
                            Url.Action("Product", "Store", new { area = string.Empty, categorySlug = categorySlug, productSlug = entry.Slug }))
                        <div class="caption">
                            <h3>@Html.ActionLink(entry.Name, "Product", "Store", new { area = string.Empty, categorySlug = categorySlug, productSlug = entry.Slug }, null)</h3>
                            <p>@settings.Currency @entry.Price.ToString("N2")</p>
                            <p>@entry.ShortDescription.Left(128)</p>
                            @if (!settings.CatalogMode)
                            {
                                <a href="javascript:void(0);" onclick="addToCart(@entry.Id)" class="btn btn-primary">
                                    @T(LocalizableStrings.AddToCart)
                                </a>
                            }
                        </div>
                    </div>
                </div>

            if (loopCount == 3 || index == (Model.Count()))
            {
                @Html.Raw("</div>")
                <div class="clearfix"></div>
                loopCount = 1;
                index++;
                continue;
            }

            index++;
            loopCount++;
        }
        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
            <div id="pager"></div>
        </div>
    </div>
</div>

@using (Script.AtFoot())
{
    <script type="text/javascript">
        $('#pager').bootpag({
            total: @pageCount,
            page: @pageIndex,
            maxVisible: 5,
            leaps: true,
            firstLastUse: true,
        }).on("page", function (event, num) {
            window.location.href = '@Url.Action("Categories", "Store", new { area = string.Empty })' + '?pageIndex=' + num;
        });

        @if (!settings.CatalogMode)
        {
            <text>
            function addToCart(productId) {
                $.ajax({
                    url: "/store/cart/add-item-to-cart",
                    type: "POST",
                    dataType: "json",
                    data: {
                        productId: productId
                    }
                })
                .done(function (json) {
                    alert("Added to cart.");
                })
                .fail(function (jqXHR, textStatus, errorThrown) {
                    alert(errorThrown);
                    console.log(textStatus + ': ' + errorThrown);
                });
            }
            </text>
        }
    </script>
}
