@using Kore.Plugins.Widgets.RevolutionSlider
@using Kore.Plugins.Widgets.RevolutionSlider.ContentBlocks
@using Kore.Plugins.Widgets.RevolutionSlider.Data.Domain
@using Kore.Plugins.Widgets.RevolutionSlider.Extensions
@using Kore.Web.Mvc.Html
@using Kore.Web.Mvc.KoreUI
@using WebEnumExtensions = Kore.Web.EnumExtensions

@{
    Layout = KoreWebConstants.DefaultAdminLayoutPath;

    Style.IncludeBundle("kendo-ui");

    Script.IncludeBundle("kendo-ui");
    Script.IncludeBundle("breeze");
    Script.IncludeBundle("knockout");
    Script.IncludeBundle("notify");

    //Script.IncludeBundle("third-party/bootpag");
    Script.IncludeBundle("kore/common");
    Script.IncludeBundle("kore/section-switching");
    Script.IncludeBundle("kore/jqueryval");
    Script.IncludePluginScript("index.js");

    string rtlClass = IsRightToLeft ? "k-rtl" : string.Empty;
}

<style type="text/css">
    .modal-dialog {
        width: 80% !important;
    }
</style>

<div id="sliders-grid-section" class="row">
    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
        <a data-bind="click: slider.create" class="btn btn-primary">
            <i class="kore-icon kore-icon-add"></i>
            @T(KoreWebLocalizableStrings.General.Create)
        </a>
    </div>

    <div class="clearfix"></div>
    <br />

    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 @rtlClass">
        <div id="SliderGrid"></div>
    </div>
</div>

<div id="sliders-form-section" class="row" style="display:none">
    <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
        @using (var panel = Html.KoreUI().Begin(new Panel(state: State.Primary)))
        {
            using (var header = panel.BeginHeader(T(LocalizableStrings.Sliders))) { }
            using (var body = panel.BeginBody())
            {
                <form id="sliders-form-section-form" role="form">
                    <fieldset>
                        <legend id="sliders-form-section-legend"></legend>
                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            <div class="form-group">
                                @Html.Label("Name", T(LocalizableStrings.Models.Slider.Name), new { @class = "control-label" })
                                @Html.TextBox("Name", null, new { @class = "form-control", data_bind = "value: slider.name" })
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            <div class="form-group pull-right">
                                <button type="button" class="btn btn-default" data-bind="click: slider.cancel">@T(KoreWebLocalizableStrings.General.Cancel)</button>
                                <button type="button" class="btn btn-primary" data-bind="click: slider.save"><i class="kore-icon kore-icon-save"></i> @T(KoreWebLocalizableStrings.General.Save)</button>
                            </div>
                        </div>
                    </fieldset>
                </form>
            }
        }
    </article>
</div>

<div id="slides-grid-section" class="row" style="display:none">
    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
        <a data-bind="click: slide.create" class="btn btn-primary">
            <i class="kore-icon kore-icon-add"></i>
            @T(KoreWebLocalizableStrings.General.Create)
        </a>
        <a data-bind="click: slide.goBack" class="btn btn-default">
            <i class="kore-icon kore-icon-arrow-left"></i>
            @T(KoreWebLocalizableStrings.General.Back)
        </a>
    </div>

    <div class="clearfix"></div>
    <br />

    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 @rtlClass">
        <div id="SlideGrid"></div>
    </div>
</div>

<div id="slides-form-section" class="row" style="display:none">
    <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
        @using (var panel = Html.KoreUI().Begin(new Panel(state: State.Primary)))
        {
            using (var header = panel.BeginHeader(T(LocalizableStrings.Slides))) { }
            using (var body = panel.BeginBody())
            {
                <form id="slides-form-section-form" role="form">
                    <fieldset>
                        <legend id="slides-form-section-legend"></legend>
                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            <div class="form-group">
                                @Html.Label("ImageUrl", T(LocalizableStrings.Models.Slide.ImageUrl), new { @class = "control-label" })
                                <div class="input-group">
                                    @Html.TextBox("ImageUrl", null, new { @class = "form-control", data_bind = "value: slide.imageUrl" })
                                    <span class="input-group-addon">
                                        <a data-toggle="modal" href="javascript:void(0);" data-target="#imageUrlModal">
                                            <i class="kore-icon kore-icon-search"></i>
                                        </a>
                                    </span>
                                </div>
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            <div class="form-group">
                                @Html.Label("Title", T(LocalizableStrings.Models.Slide.Title), new { @class = "control-label" })
                                @Html.TextBox("Title", null, new { @class = "form-control", data_bind = "value: slide.title" })
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            <div class="form-group">
                                @Html.Label("Order", T(LocalizableStrings.Models.Slide.Order), new { @class = "control-label" })
                                @Html.TextBox("Order", null, new { @class = "form-control", data_bind = "value: slide.order" })
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            <div class="form-group">
                                @Html.Label("Transition", T(LocalizableStrings.Models.Slide.Transition), new { @class = "control-label" })
                                @Html.DropDownList(
                                    "Transition",
                                    WebEnumExtensions.ToSelectList<Transition>(emptyText: string.Empty, nameIsId: true),
                                    new { @class = "form-control", data_bind = "value: slide.transition" })
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
                            <div class="checkbox">
                                <label>
                                    @Html.CheckBox("RandomTransition", new { data_bind = "checked: slide.randomTransition" }) @T(LocalizableStrings.Models.Slide.RandomTransition)
                                </label>
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            <div class="form-group">
                                @Html.Label("SlotAmount", T(LocalizableStrings.Models.Slide.SlotAmount), new { @class = "control-label" })
                                @Html.TextBox("SlotAmount", null, new { @class = "form-control", data_bind = "value: slide.slotAmount" })
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            <div class="form-group">
                                @Html.Label("MasterSpeed", T(LocalizableStrings.Models.Slide.MasterSpeed), new { @class = "control-label" })
                                @Html.TextBox("MasterSpeed", null, new { @class = "form-control", data_bind = "value: slide.masterSpeed" })
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            <div class="form-group">
                                @Html.Label("Delay", T(LocalizableStrings.Models.Slide.Delay), new { @class = "control-label" })
                                @Html.TextBox("Delay", null, new { @class = "form-control", data_bind = "value: slide.delay" })
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            <div class="form-group">
                                @Html.Label("Link", T(LocalizableStrings.Models.Slide.Link), new { @class = "control-label" })
                                @Html.TextBox("Link", null, new { @class = "form-control", data_bind = "value: slide.link" })
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            <div class="form-group">
                                @Html.Label("Order", T(LocalizableStrings.Models.Slide.Order), new { @class = "control-label" })
                                @Html.TextBox("Order", null, new { @class = "form-control", data_bind = "value: slide.order" })
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            <div class="form-group">
                                @Html.Label("Target", T(LocalizableStrings.Models.Slide.Target), new { @class = "control-label" })
                                @Html.DropDownList(
                                    "Target",
                                    WebEnumExtensions.ToSelectList<PageTarget>(emptyText: string.Empty, nameIsId: true),
                                    new { @class = "form-control", data_bind = "value: slide.target" })
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            <div class="form-group">
                                @Html.Label("SlideIndex", T(LocalizableStrings.Models.Slide.SlideIndex), new { @class = "control-label" })
                                @Html.TextBox("SlideIndex", null, new { @class = "form-control", data_bind = "value: slide.slideIndex" })
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            <div class="form-group">
                                @Html.Label("Thumb", T(LocalizableStrings.Models.Slide.Thumb), new { @class = "control-label" })
                                @Html.TextBox("Thumb", null, new { @class = "form-control", data_bind = "value: slide.thumb" })
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
                            <div class="checkbox">
                                <label>
                                    @Html.CheckBox("LazyLoad", new { data_bind = "checked: slide.lazyLoad" }) @T(LocalizableStrings.Models.Slide.LazyLoad)
                                </label>
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            <div class="form-group">
                                @Html.Label("BackgroundRepeat", T(LocalizableStrings.Models.Slide.BackgroundRepeat), new { @class = "control-label" })
                                @Html.DropDownList(
                                    "BackgroundRepeat",
                                    WebEnumExtensions.ToSelectList<BackgroundRepeat>(emptyText: string.Empty, nameIsId: true),
                                    new { @class = "form-control", data_bind = "value: slide.backgroundRepeat" })
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            <div class="form-group">
                                @Html.Label("BackgroundFit", T(LocalizableStrings.Models.Slide.BackgroundFit), new { @class = "control-label" })
                                @Html.DropDownList(
                                    "BackgroundFit",
                                    WebEnumExtensions.ToSelectList<BackgroundFit>(emptyText: string.Empty, nameIsId: true),
                                    new { @class = "form-control", data_bind = "value: slide.backgroundFit" })
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            <div class="form-group">
                                @Html.Label("BackgroundFitCustomValue", T(LocalizableStrings.Models.Slide.BackgroundFitCustomValue), new { @class = "control-label" })
                                @Html.TextBox("BackgroundFitCustomValue", null, new { @class = "form-control", data_bind = "value: slide.backgroundFitCustomValue" })
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            <div class="form-group">
                                @Html.Label("BackgroundFitEnd", T(LocalizableStrings.Models.Slide.BackgroundFitEnd), new { @class = "control-label" })
                                @Html.TextBox("BackgroundFitEnd", null, new { @class = "form-control", data_bind = "value: slide.backgroundFitEnd" })
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            <div class="form-group">
                                @Html.Label("BackgroundPosition", T(LocalizableStrings.Models.Slide.BackgroundPosition), new { @class = "control-label" })
                                @Html.DropDownList(
                                    "BackgroundPosition",
                                    WebEnumExtensions.ToSelectList<BackgroundPosition>(emptyText: string.Empty, nameIsId: true),
                                    new { @class = "form-control", data_bind = "value: slide.backgroundPosition" })
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            <div class="form-group">
                                @Html.Label("BackgroundPositionEnd", T(LocalizableStrings.Models.Slide.BackgroundPositionEnd), new { @class = "control-label" })
                                @Html.DropDownList(
                                    "BackgroundPosition",
                                    WebEnumExtensions.ToSelectList<BackgroundPosition>(emptyText: string.Empty, nameIsId: true),
                                    new { @class = "form-control", data_bind = "value: slide.backgroundPositionEnd" })
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
                            <div class="checkbox">
                                <label>
                                    @Html.CheckBox("KenBurnsEffect", new { data_bind = "checked: slide.kenBurnsEffect" }) @T(LocalizableStrings.Models.Slide.KenBurnsEffect)
                                </label>
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            <div class="form-group">
                                @Html.Label("Duration", T(LocalizableStrings.Models.Slide.Duration), new { @class = "control-label" })
                                @Html.TextBox("Duration", null, new { @class = "form-control", data_bind = "value: slide.duration" })
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            <div class="form-group">
                                @Html.Label("Easing", T(LocalizableStrings.Models.Slide.Easing), new { @class = "control-label" })
                                @Html.DropDownList(
                                    "Easing",
                                    WebEnumExtensions.ToSelectList<EasingMethod>(emptyText: string.Empty, nameIsId: true),
                                    new { @class = "form-control", data_bind = "value: slide.easing" })
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            <div class="form-group pull-right">
                                <button type="button" class="btn btn-default" data-bind="click: slide.cancel">@T(KoreWebLocalizableStrings.General.Cancel)</button>
                                <button type="button" class="btn btn-primary" data-bind="click: slide.save"><i class="kore-icon kore-icon-save"></i> @T(KoreWebLocalizableStrings.General.Save)</button>
                            </div>
                        </div>
                    </fieldset>
                </form>
            }
        }
    </article>
</div>

<div id="layers-grid-section" class="row" style="display:none">
    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
        <a data-bind="click: layer.create" class="btn btn-primary">
            <i class="kore-icon kore-icon-add"></i>
            @T(KoreWebLocalizableStrings.General.Create)
        </a>
        <a data-bind="click: layer.goBack" class="btn btn-default">
            <i class="kore-icon kore-icon-arrow-left"></i>
            @T(KoreWebLocalizableStrings.General.Back)
        </a>
    </div>

    <div class="clearfix"></div>
    <br />

    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 @rtlClass">
        <div id="LayerGrid"></div>
    </div>
</div>

<div id="layers-form-section" class="row" style="display:none">
    <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
        @using (var panel = Html.KoreUI().Begin(new Panel(state: State.Primary)))
        {
            using (var header = panel.BeginHeader(T(LocalizableStrings.Layers))) { }
            using (var body = panel.BeginBody())
            {
                <form id="layers-form-section-form" role="form">
                    <fieldset>
                        <legend id="layers-form-section-legend"></legend>
                        @using (var tabs = Html.KoreUI().Begin(new Kore.Web.Mvc.KoreUI.Tabs()))
                        {
                            tabs.Tab(T(LocalizableStrings.Models.Layer.Tabs.General), "tab-general");
                            tabs.Tab(T(LocalizableStrings.Models.Layer.Tabs.Video), "tab-video");
                            
                            using (var tab = tabs.BeginPanel())
                            {
                                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                                    <div class="form-group">
                                        @Html.Label("CaptionText", T(LocalizableStrings.Models.Layer.CaptionText), new { @class = "control-label" })
                                        @Html.TextArea("CaptionText", null, new { @class = "form-control", data_bind = "value: layer.captionText" })
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                                    <div class="form-group">
                                        @Html.Label("Start", T(LocalizableStrings.Models.Layer.Start), new { @class = "control-label" })
                                        @Html.TextBox("Start", null, new { @class = "form-control", data_bind = "value: layer.start" })
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                                    <div class="form-group">
                                        @Html.Label("Speed", T(LocalizableStrings.Models.Layer.Speed), new { @class = "control-label" })
                                        @Html.TextBox("Speed", null, new { @class = "form-control", data_bind = "value: layer.speed" })
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                                    <div class="form-group">
                                        @Html.Label("X", T(LocalizableStrings.Models.Layer.X), new { @class = "control-label" })
                                        @Html.DropDownList(
                                            "X",
                                            WebEnumExtensions.ToSelectList<NavigationHAlign>(emptyText: string.Empty, nameIsId: true),
                                            new { @class = "form-control", data_bind = "value: layer.x" })
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                                    <div class="form-group">
                                        @Html.Label("Y", T(LocalizableStrings.Models.Layer.Y), new { @class = "control-label" })
                                        @Html.DropDownList(
                                            "Y",
                                            WebEnumExtensions.ToSelectList<NavigationVAlign>(emptyText: string.Empty, nameIsId: true),
                                            new { @class = "form-control", data_bind = "value: layer.y" })
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                                    <div class="form-group">
                                        @Html.Label("StyleClass", T(LocalizableStrings.Models.Layer.StyleClass), new { @class = "control-label" })
                                        @Html.TextBox("StyleClass", null, new { @class = "form-control", data_bind = "value: layer.styleClass" })
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                                    <div class="form-group">
                                        @Html.Label("IncomingAnimation", T(LocalizableStrings.Models.Layer.IncomingAnimation), new { @class = "control-label" })
                                        @Html.DropDownList(
                                            "IncomingAnimation",
                                            WebEnumExtensions.ToSelectList<IncomingAnimation>(emptyText: string.Empty, nameIsId: true),
                                            new { @class = "form-control", data_bind = "value: layer.incomingAnimation" })
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                                    <div class="form-group">
                                        @Html.Label("OutgoingAnimation", T(LocalizableStrings.Models.Layer.OutgoingAnimation), new { @class = "control-label" })
                                        @Html.DropDownList(
                                            "OutgoingAnimation",
                                            WebEnumExtensions.ToSelectList<OutgoingAnimation>(emptyText: string.Empty, nameIsId: true),
                                            new { @class = "form-control", data_bind = "value: layer.outgoingAnimation" })
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                                    <div class="form-group">
                                        @Html.Label("HorizontalOffset", T(LocalizableStrings.Models.Layer.HorizontalOffset), new { @class = "control-label" })
                                        @Html.TextBox("HorizontalOffset", null, new { @class = "form-control", data_bind = "value: layer.horizontalOffset" })
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                                    <div class="form-group">
                                        @Html.Label("VerticalOffset", T(LocalizableStrings.Models.Layer.VerticalOffset), new { @class = "control-label" })
                                        @Html.TextBox("VerticalOffset", null, new { @class = "form-control", data_bind = "value: layer.verticalOffset" })
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                                    <div class="form-group">
                                        @Html.Label("SplitIn", T(LocalizableStrings.Models.Layer.SplitIn), new { @class = "control-label" })
                                        @Html.DropDownList(
                                            "SplitIn",
                                            WebEnumExtensions.ToSelectList<CaptionSplitType>(nameIsId: true),
                                            new { @class = "form-control", data_bind = "value: layer.splitIn" })
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                                    <div class="form-group">
                                        @Html.Label("ElementDelay", T(LocalizableStrings.Models.Layer.ElementDelay), new { @class = "control-label" })
                                        @Html.TextBox("ElementDelay", null, new { @class = "form-control", data_bind = "value: layer.elementDelay" })
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                                    <div class="form-group">
                                        @Html.Label("SplitOut", T(LocalizableStrings.Models.Layer.SplitOut), new { @class = "control-label" })
                                        @Html.DropDownList(
                                            "SplitOut",
                                            WebEnumExtensions.ToSelectList<CaptionSplitType>(nameIsId: true),
                                            new { @class = "form-control", data_bind = "value: layer.splitOut" })
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                                    <div class="form-group">
                                        @Html.Label("EndElementDelay", T(LocalizableStrings.Models.Layer.EndElementDelay), new { @class = "control-label" })
                                        @Html.TextBox("EndElementDelay", null, new { @class = "form-control", data_bind = "value: layer.endElementDelay" })
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                                    <div class="form-group">
                                        @Html.Label("Easing", T(LocalizableStrings.Models.Layer.Easing), new { @class = "control-label" })
                                        @Html.DropDownList(
                                            "Easing",
                                            WebEnumExtensions.ToSelectList<EasingMethod>(emptyText: string.Empty, nameIsId: true),
                                            new { @class = "form-control", data_bind = "value: layer.easing" })
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                                    <div class="form-group">
                                        @Html.Label("EndSpeed", T(LocalizableStrings.Models.Layer.EndSpeed), new { @class = "control-label" })
                                        @Html.TextBox("EndSpeed", null, new { @class = "form-control", data_bind = "value: layer.endSpeed" })
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                                    <div class="form-group">
                                        @Html.Label("End", T(LocalizableStrings.Models.Layer.End), new { @class = "control-label" })
                                        @Html.TextBox("End", null, new { @class = "form-control", data_bind = "value: layer.end" })
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                                    <div class="form-group">
                                        @Html.Label("EndEasing", T(LocalizableStrings.Models.Layer.EndEasing), new { @class = "control-label" })
                                        @Html.DropDownList(
                                            "EndEasing",
                                            WebEnumExtensions.ToSelectList<EasingMethod>(emptyText: string.Empty, nameIsId: true),
                                            new { @class = "form-control", data_bind = "value: layer.endEasing" })
                                    </div>
                                </div>
                            }
                            using (var tab = tabs.BeginPanel())
                            {
                                <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
                                    <div class="checkbox">
                                        <label>
                                            @Html.CheckBox("AutoPlay", new { data_bind = "checked: layer.autoPlay" }) @T(LocalizableStrings.Models.Layer.AutoPlay)
                                        </label>
                                    </div>
                                    <div class="checkbox">
                                        <label>
                                            @Html.CheckBox("AutoPlayOnlyFirstTime", new { data_bind = "checked: layer.autoPlayOnlyFirstTime" }) @T(LocalizableStrings.Models.Layer.AutoPlayOnlyFirstTime)
                                        </label>
                                    </div>
                                    <div class="checkbox">
                                        <label>
                                            @Html.CheckBox("NextSlideAtEnd", new { data_bind = "checked: layer.nextSlideAtEnd" }) @T(LocalizableStrings.Models.Layer.NextSlideAtEnd)
                                        </label>
                                    </div>
                                    <div class="checkbox">
                                        <label>
                                            @Html.CheckBox("ForceCover", new { data_bind = "checked: layer.forceCover" }) @T(LocalizableStrings.Models.Layer.ForceCover)
                                        </label>
                                    </div>
                                    <div class="checkbox">
                                        <label>
                                            @Html.CheckBox("ForceRewind", new { data_bind = "checked: layer.forceRewind" }) @T(LocalizableStrings.Models.Layer.ForceRewind)
                                        </label>
                                    </div>
                                    <div class="checkbox">
                                        <label>
                                            @Html.CheckBox("Mute", new { data_bind = "checked: layer.mute" }) @T(LocalizableStrings.Models.Layer.Mute)
                                        </label>
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                                    <div class="form-group">
                                        @Html.Label("VideoPoster", T(LocalizableStrings.Models.Layer.VideoPoster), new { @class = "control-label" })
                                        <div class="input-group">
                                            @Html.TextBox("VideoPoster", null, new { @class = "form-control", data_bind = "value: layer.videoPoster" })
                                            <span class="input-group-addon">
                                                <a data-toggle="modal" href="javascript:void(0);" data-target="#videoPosterModal">
                                                    <i class="kore-icon kore-icon-search"></i>
                                                </a>
                                            </span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                                    <div class="form-group">
                                        @Html.Label("VideoWidth", T(LocalizableStrings.Models.Layer.VideoWidth), new { @class = "control-label" })
                                        @Html.TextBox("VideoWidth", null, new { @class = "form-control", data_bind = "value: layer.videoWidth" })
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                                    <div class="form-group">
                                        @Html.Label("VideoWidthUnit", T(LocalizableStrings.Models.Layer.VideoWidthUnit), new { @class = "control-label" })
                                        @Html.DropDownList(
                                            "VideoWidthUnit",
                                            WebEnumExtensions.ToSelectList<CssUnit>(nameIsId: true),
                                            new { @class = "form-control", data_bind = "value: layer.videoWidthUnit" })
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                                    <div class="form-group">
                                        @Html.Label("VideoHeight", T(LocalizableStrings.Models.Layer.VideoHeight), new { @class = "control-label" })
                                        @Html.TextBox("VideoHeight", null, new { @class = "form-control", data_bind = "value: layer.videoHeight" })
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                                    <div class="form-group">
                                        @Html.Label("VideoHeightUnit", T(LocalizableStrings.Models.Layer.VideoHeightUnit), new { @class = "control-label" })
                                        @Html.DropDownList(
                                            "VideoHeightUnit",
                                            WebEnumExtensions.ToSelectList<CssUnit>(nameIsId: true),
                                            new { @class = "form-control", data_bind = "value: layer.videoHeightUnit" })
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                                    <div class="form-group">
                                        @Html.Label("AspectRatio", T(LocalizableStrings.Models.Layer.AspectRatio), new { @class = "control-label" })
                                        @Html.DropDownList(
                                            "AspectRatio",
                                            WebEnumExtensions.ToSelectList<AspectRatio>(emptyText: string.Empty, nameIsId: true),
                                            new { @class = "form-control", data_bind = "value: layer.aspectRatio" })
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                                    <div class="form-group">
                                        @Html.Label("VideoPreload", T(LocalizableStrings.Models.Layer.VideoPreload), new { @class = "control-label" })
                                        @Html.DropDownList(
                                            "VideoPreload",
                                            WebEnumExtensions.ToSelectList<VideoPreloadOption>(nameIsId: true),
                                            new { @class = "form-control", data_bind = "value: layer.videoPreload" })
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                                    <div class="form-group">
                                        @Html.Label("VideoType", T(LocalizableStrings.Models.Layer.VideoType), new { @class = "control-label" })
                                        @Html.DropDownList(
                                            "VideoType",
                                            WebEnumExtensions.ToSelectList<VideoType>(emptyText: string.Empty, nameIsId: true),
                                            new { @class = "form-control", data_bind = "value: layer.videoType" })
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12" data-bind="visible: layer.videoType() == 'Html5'">
                                    <div class="form-group">
                                        @Html.Label("VideoMp4", T(LocalizableStrings.Models.Layer.VideoMp4), new { @class = "control-label" })
                                        <div class="input-group">
                                            @Html.TextBox("VideoMp4", null, new { @class = "form-control", data_bind = "value: layer.videoMp4" })
                                            <span class="input-group-addon">
                                                <a data-toggle="modal" href="javascript:void(0);" data-target="#videoMp4Modal">
                                                    <i class="kore-icon kore-icon-search"></i>
                                                </a>
                                            </span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12" data-bind="visible: layer.videoType() == 'Html5'">
                                    <div class="form-group">
                                        @Html.Label("VideoWebM", T(LocalizableStrings.Models.Layer.VideoWebM), new { @class = "control-label" })
                                        <div class="input-group">
                                            @Html.TextBox("VideoWebM", null, new { @class = "form-control", data_bind = "value: layer.videoWebM" })
                                            <span class="input-group-addon">
                                                <a data-toggle="modal" href="javascript:void(0);" data-target="#videoWebMModal">
                                                    <i class="kore-icon kore-icon-search"></i>
                                                </a>
                                            </span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12" data-bind="visible: layer.videoType() == 'Html5'">
                                    <div class="form-group">
                                        @Html.Label("VideoOgv", T(LocalizableStrings.Models.Layer.VideoOgv), new { @class = "control-label" })
                                        <div class="input-group">
                                            @Html.TextBox("VideoOgv", null, new { @class = "form-control", data_bind = "value: layer.videoOgv" })
                                            <span class="input-group-addon">
                                                <a data-toggle="modal" href="javascript:void(0);" data-target="#videoOgvModal">
                                                    <i class="kore-icon kore-icon-search"></i>
                                                </a>
                                            </span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12" data-bind="visible: layer.videoType() == 'YouTube'">
                                    <div class="form-group">
                                        @Html.Label("YouTubeId", T(LocalizableStrings.Models.Layer.YouTubeId), new { @class = "control-label" })
                                        @Html.TextBox("YouTubeId", null, new { @class = "form-control", data_bind = "value: layer.youTubeId" })
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12" data-bind="visible: layer.videoType() == 'Vimeo'">
                                    <div class="form-group">
                                        @Html.Label("VimeoId", T(LocalizableStrings.Models.Layer.VimeoId), new { @class = "control-label" })
                                        @Html.TextBox("VimeoId", null, new { @class = "form-control", data_bind = "value: layer.vimeoId" })
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
                                    <div class="checkbox">
                                        <label>
                                            @Html.CheckBox("ShowVideoControls", new { data_bind = "checked: layer.showVideoControls" }) @T(LocalizableStrings.Models.Layer.ShowVideoControls)
                                        </label>
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                                    <div class="form-group">
                                        @Html.Label("VideoAttributes", T(LocalizableStrings.Models.Layer.VideoAttributes), new { @class = "control-label" })
                                        @Html.TextBox("VideoAttributes", null, new { @class = "form-control", data_bind = "value: layer.videoAttributes" })
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                                    <div class="form-group">
                                        @Html.Label("VideoLoop", T(LocalizableStrings.Models.Layer.VideoLoop), new { @class = "control-label" })
                                        @Html.DropDownList(
                                            "VideoLoop",
                                            WebEnumExtensions.ToSelectList<VideoLoop>(nameIsId: true),
                                            new { @class = "form-control", data_bind = "value: layer.videoLoop" })
                                    </div>
                                </div>
                            }
                        }
                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            <div class="form-group pull-right">
                                <button type="button" class="btn btn-default" data-bind="click: layer.cancel">@T(KoreWebLocalizableStrings.General.Cancel)</button>
                                <button type="button" class="btn btn-primary" data-bind="click: layer.save"><i class="kore-icon kore-icon-save"></i> @T(KoreWebLocalizableStrings.General.Save)</button>
                            </div>
                        </div>
                    </fieldset>
                </form>
            }
        }
    </article>
</div>

<div class="modal fade" id="imageUrlModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" onclick="dismissModal('imageUrlModal');" aria-hidden="true">&times;</button>
                <h4 class="modal-title">Select Image</h4>
            </div>
            <div class="modal-body">
                <iframe src="/filemanager/dialog.php?type=1&relative_url=1&fldr=&field_id=ImageUrl&ignore_last_position=1" frameborder="0" style="overflow:hidden;min-height:600px; height:100%;width:100%" height="100%" width="100%"></iframe>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="videoPosterModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" onclick="dismissModal('videoPosterModal');" aria-hidden="true">&times;</button>
                <h4 class="modal-title">Select Image</h4>
            </div>
            <div class="modal-body">
                <iframe src="/filemanager/dialog.php?type=1&relative_url=1&fldr=&field_id=VideoPoster&ignore_last_position=1" frameborder="0" style="overflow:hidden;min-height:600px; height:100%;width:100%" height="100%" width="100%"></iframe>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="videoMp4Modal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" onclick="dismissModal('videoMp4Modal');" aria-hidden="true">&times;</button>
                <h4 class="modal-title">Select Video</h4>
            </div>
            <div class="modal-body">
                <iframe src="/filemanager/dialog.php?type=3&relative_url=1&fldr=&field_id=VideoMp4&ignore_last_position=1" frameborder="0" style="overflow:hidden;min-height:600px; height:100%;width:100%" height="100%" width="100%"></iframe>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="videoWebMModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" onclick="dismissModal('videoWebMModal');" aria-hidden="true">&times;</button>
                <h4 class="modal-title">Select Video</h4>
            </div>
            <div class="modal-body">
                <iframe src="/filemanager/dialog.php?type=3&relative_url=1&fldr=&field_id=VideoWebM&ignore_last_position=1" frameborder="0" style="overflow:hidden;min-height:600px; height:100%;width:100%" height="100%" width="100%"></iframe>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="videoOgvModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" onclick="dismissModal('videoOgvModal');" aria-hidden="true">&times;</button>
                <h4 class="modal-title">Select Video</h4>
            </div>
            <div class="modal-body">
                <iframe src="/filemanager/dialog.php?type=3&relative_url=1&fldr=&field_id=VideoOgv&ignore_last_position=1" frameborder="0" style="overflow:hidden;min-height:600px; height:100%;width:100%" height="100%" width="100%"></iframe>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script type="text/javascript">
        var modalDismissed = false;
        
        function dismissModal(modalId) {
            modalDismissed = true;
            $('#' + modalId).modal('hide');
        };

        $(document).ready(function () {
            $('#imageUrlModal').on('hidden.bs.modal', function () {
                if (!modalDismissed) {
                    var url = $('#ImageUrl').val();
                    url = "/Media/Uploads/" + url;
                    viewModel.slide.imageUrl(url);
                }
                modalDismissed = false;
            });
            $('#videoPosterModal').on('hidden.bs.modal', function () {
                if (!modalDismissed) {
                    var url = $('#VideoPoster').val();
                    url = "/Media/Uploads/" + url;
                    viewModel.layer.videoPoster(url);
                }
                modalDismissed = false;
            });
            $('#videoMp4Modal').on('hidden.bs.modal', function () {
                if (!modalDismissed) {
                    var url = $('#VideoMp4').val();
                    url = "/Media/Uploads/" + url;
                    viewModel.layer.videoMp4(url);
                }
                modalDismissed = false;
            });
            $('#videoWebMModal').on('hidden.bs.modal', function () {
                if (!modalDismissed) {
                    var url = $('#VideoWebM').val();
                    url = "/Media/Uploads/" + url;
                    viewModel.layer.videoWebM(url);
                }
                modalDismissed = false;
            });
            $('#videoOgvModal').on('hidden.bs.modal', function () {
                if (!modalDismissed) {
                    var url = $('#VideoOgv').val();
                    url = "/Media/Uploads/" + url;
                    viewModel.layer.videoOgv(url);
                }
                modalDismissed = false;
            });
        });

        var gridPageSize = @SiteSettings.DefaultGridPageSize;
        var translations = {
            Create: '@T(KoreWebLocalizableStrings.General.Create).Text',
            Delete: '@T(KoreWebLocalizableStrings.General.Delete).Text',
            DeleteRecordConfirm: '@T(KoreWebLocalizableStrings.General.ConfirmDeleteRecord).Text',
            DeleteRecordError: '@T(KoreWebLocalizableStrings.General.DeleteRecordError).Text',
            DeleteRecordSuccess: '@T(KoreWebLocalizableStrings.General.DeleteRecordSuccess).Text',
            Edit: '@T(KoreWebLocalizableStrings.General.Edit).Text',
            GetRecordError: '@T(KoreWebLocalizableStrings.General.GetRecordError).Text',
            InsertRecordError: '@T(KoreWebLocalizableStrings.General.InsertRecordError).Text',
            InsertRecordSuccess: '@T(KoreWebLocalizableStrings.General.InsertRecordSuccess).Text',
            Layers: '@T(LocalizableStrings.Layers).Text',
            Sliders: '@T(LocalizableStrings.Sliders).Text',
            Slides: '@T(LocalizableStrings.Slides).Text',
            UpdateRecordError: '@T(KoreWebLocalizableStrings.General.UpdateRecordError).Text',
            UpdateRecordSuccess: '@T(KoreWebLocalizableStrings.General.UpdateRecordSuccess).Text',

            Columns:{
                Layer: {
                    Start: '@T(LocalizableStrings.Models.Layer.Start).Text',
                    Speed: '@T(LocalizableStrings.Models.Layer.Speed).Text',
                    CaptionText: '@T(LocalizableStrings.Models.Layer.CaptionText).Text',
                    X: '@T(LocalizableStrings.Models.Layer.X).Text',
                    Y: '@T(LocalizableStrings.Models.Layer.Y).Text'
                },
                Slider: {
                    Name: '@T(LocalizableStrings.Models.Slider.Name).Text'
                },
                Slide: {
                    Order: '@T(LocalizableStrings.Models.Slide.Order).Text',
                    Title: '@T(LocalizableStrings.Models.Slide.Title).Text',
                    Link: '@T(LocalizableStrings.Models.Slide.Link).Text',
                }
            }
        }

        $(document).ready(function() {
            currentSection = $("#sliders-grid-section");
        });
    </script>
}