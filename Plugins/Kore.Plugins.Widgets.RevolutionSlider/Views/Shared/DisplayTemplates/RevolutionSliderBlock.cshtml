@using Kore.Infrastructure
@using Kore.Plugins.Widgets.RevolutionSlider.Extensions
@using Kore.Plugins.Widgets.RevolutionSlider.ContentBlocks
@using Kore.Plugins.Widgets.RevolutionSlider.Services
@using Kore.Web.ContentManagement.Areas.Admin.Media.Services

@model RevolutionSliderBlock

@{
    Style.IncludePluginStyle("css/settings.css");
    Script.IncludePluginScript("jquery.themepunch.tools.min.js");
    Script.IncludePluginScript("jquery.themepunch.revolution.min.js");

    var slideService = EngineContext.Current.Resolve<ISlideService>();
    var images = slideService.Repository.Table
        .Where(x => x.SliderId == Model.SliderId)
        .Select(x => new { Src = x.ImageUrl, Alt = x.Title })
        .ToList();

    var script = Model.ToHtmlString();
}

<div class="bannercontainer">
    <div id="@Model.ControlId" class="banner">
        <ul>
            @foreach (var slide in images)
            {
                <li>
                    @Html.Image("http://placehold.it/350x150", slide.Alt, new { data_lazyload = slide.Src })
                </li>
            }
        </ul>
    </div>
</div>

@using (Script.AtFoot())
{
    <script type="text/javascript">
        $(document).ready(function () {
            @script
        });
    </script>
}