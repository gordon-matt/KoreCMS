@using Kore.Infrastructure
@using Kore.Web.ContentManagement.Areas.Admin.Blog
@using Kore.Web.ContentManagement.Areas.Admin.Blog.Domain
@model IEnumerable<Post>

@{
    var settings = EngineContext.Current.Resolve<BlogSettings>();
    
    bool isChildAction = ViewBag.IsChildAction;
    
    if (isChildAction)
    {
        Layout = null;
    }
    else
    {
        if (!string.IsNullOrEmpty(settings.LayoutPathOverride))
        {
            Layout = settings.LayoutPathOverride;
        }
        else
        {
            Layout = KoreWebConstants.DefaultFrontendLayoutPath;
        }
    }

    Script.IncludeBundle("kore-cms/bootpag");

    ViewBag.Title = settings.PageTitle;

    var userNames = (IDictionary<string, string>)ViewBag.UserNames;
    int pageCount = ViewBag.PageCount;
    int pageIndex = ViewBag.PageIndex;
}

<div class="blog-container">
    <div id="main-section" class="row blog-section">
        <div class="col-xs-12 col-sm-9 col-md-9 col-lg-9">
            @foreach (var entry in Model)
            {
                <article class="blog-teaser row">
                    <h2 class="blog-headline">
                        @if (entry.UseExternalLink)
                        {
                            @Html.Link(entry.Headline, entry.ExternalLink, PageTarget.Blank)
                        }
                        else
                        {
                            @Html.ActionLink(entry.Headline, "Details", "BlogContent", new { area = string.Empty, slug = entry.Slug }, null)
                        }
                    </h2>
                    <p>
                        @Html.Raw(string.Format(
                            T(KoreCmsLocalizableStrings.Blog.PostedByXOnX),
                            string.Concat("<strong>", userNames[entry.UserId], "</strong>"),
                            string.Concat("<strong>", entry.DateCreatedUtc, "</strong>")))
                    </p>
                    
                    @{
                        string teaserImageUrl = string.IsNullOrEmpty(entry.TeaserImageUrl)
                            ? "http://placehold.it/280x136&text=Image+Missing"
                            : entry.TeaserImageUrl;
                    }

                    <div class="pull-left">
                        <img class="img-responsive" src="@teaserImageUrl" style="max-width:400px" />
                    </div>
                    <div class="pull-right">
                        <p class="blog-short-desc col-xs-9 col-sm-9 col-md-9 col-lg-9">@entry.ShortDescription</p>
                    </div>
                    <hr />
                </article>
            }
        </div>
        <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
            @Html.ContentZone("Blog_Categories")
            <div class="clearfix"></div>
            @Html.ContentZone("Blog_Tags")
            <div class="clearfix"></div>
            @Html.ContentZone("Blog_LatestPosts")
        </div>
    </div>
    <div class="row">
        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
            <div id="pager"></div>
        </div>
    </div>
</div>

@using (Script.AtFoot())
{
    <script type="text/javascript">
        $('#pager').bootpag({
            total: @pageCount,
            page: @pageIndex,
            maxVisible: 5,
            leaps: true,
            firstLastUse: true,
        }).on("page", function (event, num) {
            window.location.href = '@Url.Action("Index", "BlogContent", new { area = string.Empty })' + '?pageIndex=' + num;
        });
    </script>
}