@using Kore.Web.ContentManagement

@model Kore.Plugins.Widgets.Google.Widgets.GoogleAnalyticsWidget

<div id="widget-content">
    <div class="col-sm-6 col-md-6">
        <div class="form-group">
            @Html.LabelFor(m => m.AccountNumber, new { @class = "control-label" })
            @Html.TextBoxFor(m => m.AccountNumber, new { @class = "form-control", data_bind = "value: accountNumber" })
        </div>
    </div>
    <div class="col-sm-6 col-md-6">
        <div class="form-group">
            @Html.LabelFor(m => m.DomainName, new { @class = "control-label" })
            @Html.TextBoxFor(m => m.DomainName, new { @class = "form-control", data_bind = "value: domainName" })
        </div>
    </div>
</div>

<script type="text/javascript">
    function updateModel() {
        viewModel.accountNumber = ko.observable(0);
        viewModel.domainName = ko.observable(0);

        var data = ko.mapping.fromJSON(viewModel.widgetValues());

        if ((isFunction(data) && data()) || data) {
            if (data.accountNumber == undefined) {
                // If this is not set, it means the widget is new and we have nothing in widgetValues
                return;
            }
            if (data.AccountNumber) {
                viewModel.accountNumber(data.AccountNumber());
            }
            if (data.DomainName) {
                viewModel.domainName(data.DomainName());
            }
        }
    };

    function cleanUp() {
        delete viewModel.accountNumber;
        delete viewModel.domainName;
    }

    function onBeforeSave() {
        var data = {
            AccountNumber: viewModel.accountNumber(),
            DomainName: viewModel.domainName()
        };

        viewModel.widgetValues(ko.mapping.toJSON(data));
    };

    function isFunction(functionToCheck) {
        var getType = {};
        return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';
    }
</script>