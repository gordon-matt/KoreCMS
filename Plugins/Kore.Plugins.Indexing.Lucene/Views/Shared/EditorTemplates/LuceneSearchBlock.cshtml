@using Kore.Plugins.Indexing.Lucene
@using Kore.Web.ContentManagement

@model Kore.Plugins.Indexing.Lucene.LuceneSearchBlock

<div id="block-content">
    <div class="col-xs-6 col-sm-6 col-md-6 col-lg-6">
        <div class="checkbox">
            <label>
                @Html.CheckBoxFor(m => m.RenderAsBootstrapNavbarForm, new { data_bind = "checked: renderAsBootstrapNavbarForm" }) @T(LocalizableStrings.LuceneSearchBlock.RenderAsBootstrapNavbarForm)
            </label>
        </div>
    </div>
</div>

<script type="text/javascript">
    var contentBlockModel = (function () {
        var f = {};
        f.updateModel = function () {
            viewModel.renderAsBootstrapNavbarForm = ko.observable(0);

            var data = ko.mapping.fromJSON(viewModel.blockValues());

            if ((isFunction(data) && data()) || data) {
                if (data.RenderAsBootstrapNavbarForm == undefined) {
                    // If this is not set, it means the contentBlock is new and we have nothing in blockValues
                    return;
                }
                if (data.RenderAsBootstrapNavbarForm) {
                    viewModel.renderAsBootstrapNavbarForm(data.RenderAsBootstrapNavbarForm());
                }
            }
        };
        f.cleanUp = function () {
            delete viewModel.renderAsBootstrapNavbarForm;
        };
        f.onBeforeSave = function () {
            var data = {
                RenderAsBootstrapNavbarForm: viewModel.renderAsBootstrapNavbarForm()
            };

            viewModel.blockValues(ko.mapping.toJSON(data));
        };
        return f;
    })();
</script>